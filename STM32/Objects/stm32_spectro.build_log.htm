<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.39.0.0
Copyright (C) 2023 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Ahmed Said, HP Inc., LIC=BUURY-IJNVU-RA2DM-XHN0A-5JIC9-QI6GI
 
Tool Versions:
Toolchain:       MDK-ARM Plus  Version: 5.39.0.0
Toolchain Path:  D:\KEIL_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.21
Assembler:       Armasm.exe V6.21
Linker/Locator:  ArmLink.exe V6.21
Library Manager: ArmAr.exe V6.21
Hex Converter:   FromElf.exe V6.21
CPU DLL:         SARMCM3.DLL V5.39.0.0
Dialog DLL:      DCM.DLL V1.17.5.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.2.0.0
Dialog DLL:      TCM.DLL V1.56.4.0
 
<h2>Project:</h2>
D:\Senior_2\Graduation_Project\COTS\STM32F103C8T6\STM32\stm32_spectro.uvprojx
Project File Date:  03/15/2024

<h2>Output:</h2>
*** Using Compiler 'V6.21', folder: 'D:\KEIL_v5\ARM\ARMCLANG\Bin'
Rebuild target 'Target 1'
MCAL/AFIO/AFIO_Program.c(11): warning: In file included from...
MCAL/AFIO/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/AFIO/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/AFIO/AFIO_Program.c(11): warning: In file included from...
MCAL/AFIO/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/AFIO/AFIO_Program.c(13): warning: In file included from...
MCAL/AFIO/AFIO_Private.h(29): warning: no newline at end of file [-Wnewline-eof]
   29 | #endif /*_AFIO_PRIVATE_H_*/
      |                            ^
MCAL/AFIO/AFIO_Program.c(14): warning: In file included from...
MCAL/AFIO/AFIO_Interface.h(39): warning: no newline at end of file [-Wnewline-eof]
   39 | #endif /*_AFIO_INTERFACE_H_*/
      |                              ^
MCAL/AFIO/AFIO_Program.c(15): warning: In file included from...
MCAL/AFIO/AFIO_Config.h(13): warning: no newline at end of file [-Wnewline-eof]
   13 | #endif /*_AFIO_CONFIG_H_*/
      |                           ^
MCAL/AFIO/AFIO_Program.c(20): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   20 |     if((Copy_uint8Port <= MAFIO_PORTG_PIN) && (Copy_uint8EXTILine <= MAFIO_EXTI15))
      |                           ^
MCAL/AFIO/AFIO_Interface.h(36): note: expanded from macro 'MAFIO_PORTG_PIN'
   36 | #define MAFIO_PORTG_PIN                                 0b0110
      |                                                         ^
MCAL/AFIO/AFIO_Program.c(25): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   25 |         MAFIO ->EXTICR[Loc_uint8RegIndex] &= ~((0b1111) << Loc_uint8RegOffset * 4);
      |                                                 ^
MCAL/AFIO/AFIO_Program.c(25): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   25 |         MAFIO ->EXTICR[Loc_uint8RegIndex] &= ~((0b1111) << Loc_uint8RegOffset * 4);
      |                                           ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/AFIO/AFIO_Program.c(26): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   26 |         MAFIO ->EXTICR[Loc_uint8RegIndex] |= ((Copy_uint8Port) << Loc_uint8RegOffset * 4);
      |                                           ~~  ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/AFIO/AFIO_Program.c(33): warning: no newline at end of file [-Wnewline-eof]
   33 | }
      |  ^
MCAL/AFIO/AFIO_Program.c(25): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   25 |         MAFIO ->EXTICR[Loc_uint8RegIndex] &= ~((0b1111) << Loc_uint8RegOffset * 4);
      |         ^~~~~~~~~~~~~~
MCAL/AFIO/AFIO_Private.h(28): note: expanded from macro 'MAFIO'
   28 | #define MAFIO                                        ((MAFIO_Typedef *)(MAFIO_BASE_ADDRESS))
      |                                                      ^
MCAL/AFIO/AFIO_Program.c(26): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   26 |         MAFIO ->EXTICR[Loc_uint8RegIndex] |= ((Copy_uint8Port) << Loc_uint8RegOffset * 4);
      |         ^~~~~~~~~~~~~~
MCAL/AFIO/AFIO_Private.h(28): note: expanded from macro 'MAFIO'
   28 | #define MAFIO                                        ((MAFIO_Typedef *)(MAFIO_BASE_ADDRESS))
      |                                                      ^
12 warnings generated.
compiling AFIO_Program.c...
MCAL/GPTMR/GPTMR_Program.c(11): warning: In file included from...
MCAL/GPTMR/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/GPTMR/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/GPTMR/GPTMR_Program.c(11): warning: In file included from...
MCAL/GPTMR/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/GPTMR/GPTMR_Program.c(13): warning: In file included from...
MCAL/GPTMR/GPTMR_Private.h(208): warning: no newline at end of file [-Wnewline-eof]
  208 | #endif /*_GPTMR_PRIVATE_H_*/
      |                             ^
MCAL/GPTMR/GPTMR_Program.c(14): warning: In file included from...
MCAL/GPTMR/GPTMR_Interface.h(75): warning: no newline at end of file [-Wnewline-eof]
   75 | #endif /*_GPTMR_INTERFACE_H_*/
      |                               ^
MCAL/GPTMR/GPTMR_Program.c(15): warning: In file included from...
MCAL/GPTMR/GPTMR_Config.h(77): warning: no newline at end of file [-Wnewline-eof]
   77 | #endif /*_GPTMR_CONFIG_H_*/
      |                            ^
MCAL/GPTMR/GPTMR_Program.c(18): warning: redundant parentheses surrounding declarator [-Wredundant-parens]
   18 | static volatile ptr_to_func_t (glbl_PCallbackFunc[3]) = {NULL_PTR};
      |                               ^~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(38): warning: implicit conversion loses integer precision: 'uint32' (aka 'unsigned long') to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
   38 |             *P_uint16PreloadValue = Loc_uint32TempPreload;
      |                                   ~ ^~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(66): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   66 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_UDIS_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(70): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   70 |             CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_URS_BIT);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(99): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   99 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_OPM_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(109): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  109 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_CMS_START_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(110): warning: operator '<<' has lower precedence than '+'; '+' will be evaluated first [-Wshift-op-parentheses]
  110 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_CMS_START_BIT + 1);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                             ~~ ^~~
MCAL/GPTMR/GPTMR_Program.c(110): note: place parentheses around the '+' expression to silence this warning
  110 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_CMS_START_BIT + 1);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                                ^~~
MCAL/GPTMR/GPTMR_Program.c(110): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  110 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_CMS_START_BIT + 1);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(114): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  114 |             CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_DIR_BIT);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(183): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  183 |                 CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> SR), MGPTMR_SR_UIF_BIT);
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(213): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  213 |     CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_CEN_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(278): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  278 |     CLR_BIT((GPTMR[0] -> SR), MGPTMR_SR_UIF_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(268): warning: no previous prototype for function 'TIM2_IRQHandler' [-Wmissing-prototypes]
  268 | void TIM2_IRQHandler(void)
      |      ^
MCAL/GPTMR/GPTMR_Program.c(268): note: declare 'static' if the function is not intended to be used outside of this translation unit
  268 | void TIM2_IRQHandler(void)
      | ^
      | static 
MCAL/GPTMR/GPTMR_Program.c(291): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  291 |     CLR_BIT((GPTMR[1] -> SR), MGPTMR_SR_UIF_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(281): warning: no previous prototype for function 'TIM3_IRQHandler' [-Wmissing-prototypes]
  281 | void TIM3_IRQHandler(void)
      |      ^
MCAL/GPTMR/GPTMR_Program.c(281): note: declare 'static' if the function is not intended to be used outside of this translation unit
  281 | void TIM3_IRQHandler(void)
      | ^
      | static 
MCAL/GPTMR/GPTMR_Program.c(304): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  304 |     CLR_BIT((GPTMR[2] -> SR), MGPTMR_SR_UIF_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(305): warning: no newline at end of file [-Wnewline-eof]
  305 | }
      |  ^
MCAL/GPTMR/GPTMR_Program.c(294): warning: no previous prototype for function 'TIM4_IRQHandler' [-Wmissing-prototypes]
  294 | void TIM4_IRQHandler(void)
      |      ^
MCAL/GPTMR/GPTMR_Program.c(294): note: declare 'static' if the function is not intended to be used outside of this translation unit
  294 | void TIM4_IRQHandler(void)
      | ^
      | static 
MCAL/GPTMR/GPTMR_Program.c(66): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   66 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_UDIS_BIT);
      |                  ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(70): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   70 |             CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_URS_BIT);
      |                      ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(99): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   99 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_OPM_BIT);
      |                  ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(109): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  109 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_CMS_START_BIT);
      |                  ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(110): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  110 |         CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_CMS_START_BIT + 1);
      |                  ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(114): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  114 |             CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_DIR_BIT);
      |                      ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(147): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  147 |         SET_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_ARPE_BIT);
      |                  ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(161): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  161 |         SET_BIT((GPTMR[Copy_uint32TimerSelect] -> DIER), MGPTMR_DIER_UIE_BIT);
      |                  ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(175): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  175 |         GPTMR[Copy_uint32TimerSelect] -> PSC = (uint16)((uint16)(MGPTMR_CLK_PRESCALER) - 1);
      |         ^~~~~
MCAL/GPTMR/GPTMR_Program.c(183): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  183 |                 CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> SR), MGPTMR_SR_UIF_BIT);
      |                          ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(198): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  198 |     SET_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_CEN_BIT);
      |              ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(199): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  199 |     GPTMR[Copy_uint32TimerSelect] -> CNT = 0;
      |     ^~~~~
MCAL/GPTMR/GPTMR_Program.c(213): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  213 |     CLR_BIT((GPTMR[Copy_uint32TimerSelect] -> CR1), MGPTMR_CR1_CEN_BIT);
      |              ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(235): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  235 |         GPTMR[Copy_uint32TimerSelect] -> ARR = Loc_uint16PreloadValue;
      |         ^~~~~
MCAL/GPTMR/GPTMR_Program.c(259): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  259 |         glbl_PCallbackFunc[Copy_uint32TimerSelect] = P_UpdateCallbackFunc;
      |         ^~~~~~~~~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(283): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  283 |     if(glbl_PCallbackFunc[1] != NULL_PTR)
      |        ^~~~~~~~~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(285): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  285 |         (glbl_PCallbackFunc[1])();
      |          ^~~~~~~~~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(291): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  291 |     CLR_BIT((GPTMR[1] -> SR), MGPTMR_SR_UIF_BIT);
      |              ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/GPTMR/GPTMR_Program.c(296): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  296 |     if(glbl_PCallbackFunc[2] != NULL_PTR)
      |        ^~~~~~~~~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(298): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  298 |         (glbl_PCallbackFunc[2])();
      |          ^~~~~~~~~~~~~~~~~~
MCAL/GPTMR/GPTMR_Program.c(304): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  304 |     CLR_BIT((GPTMR[2] -> SR), MGPTMR_SR_UIF_BIT);
      |              ^~~~~
MCAL/GPTMR/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
44 warnings generated.
compiling GPTMR_Program.c...
MCAL/SCB/SCB_Program.c(11): warning: In file included from...
MCAL/SCB/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/SCB/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/SCB/SCB_Program.c(11): warning: In file included from...
MCAL/SCB/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/SCB/SCB_Program.c(13): warning: In file included from...
MCAL/SCB/SCB_Private.h(293): warning: 'SCB_SHCSR_MEMFAULTACT' macro redefined [-Wmacro-redefined]
  293 | #define SCB_SHCSR_MEMFAULTACT                               7
      |         ^
MCAL/SCB/SCB_Private.h(287): note: previous definition is here
  287 | #define SCB_SHCSR_MEMFAULTACT                               0
      |         ^
MCAL/SCB/SCB_Private.h(314): warning: no newline at end of file [-Wnewline-eof]
  314 | #endif /*_SCB_PRIVATE_H_*/
      |                           ^
MCAL/SCB/SCB_Program.c(14): warning: In file included from...
MCAL/SCB/SCB_Interface.h(141): warning: no newline at end of file [-Wnewline-eof]
  141 | #endif /*_SCB_INTERFACE_H_*/
      |                             ^
MCAL/SCB/SCB_Program.c(15): warning: In file included from...
MCAL/SCB/SCB_Config.h(13): warning: no newline at end of file [-Wnewline-eof]
   13 | #endif
      |       ^
MCAL/SCB/SCB_Program.c(22): warning: function 'MSCB_SystemReset' could be declared with attribute 'noreturn' [-Wmissing-noreturn]
   22 | {
      | ^
MCAL/SCB/SCB_Program.c(74): warning: signed shift result (0x80000000) sets the sign bit of the shift expression's type ('int') and becomes negative [-Wshift-sign-overflow]
   74 |     SET_BIT(SCB -> ICSR, SCB_ICSR_NMIPENDSET);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/SCB/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                          ~ ^  ~~~
MCAL/SCB/SCB_Program.c(74): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   74 |     SET_BIT(SCB -> ICSR, SCB_ICSR_NMIPENDSET);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/SCB/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                      ~~  ~~^~~~~~
MCAL/SCB/SCB_Program.c(148): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  148 |         uint16 Loc_uint16ExceptionNum = (SCB -> ICSR) & ((0b111111111) << SCB_ICSR_VECTACTIVE_START);
      |                                                           ^
MCAL/SCB/SCB_Program.c(188): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  188 |                 SCB -> SHPR[Copy_uint8SystemHandler] = (Copy_uint8SysHandlerPriority << 4);
      |                                                      ~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
MCAL/SCB/SCB_Program.c(252): warning: no newline at end of file [-Wnewline-eof]
  252 | }
      |  ^
MCAL/SCB/SCB_Program.c(188): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  188 |                 SCB -> SHPR[Copy_uint8SystemHandler] = (Copy_uint8SysHandlerPriority << 4);
      |                 ^~~~~~~~~~~
MCAL/SCB/SCB_Private.h(102): note: expanded from macro 'SCB'
  102 | #define SCB                                                 ((SCB_RegDef_t *) SCB_BASE_ADDRESS)
      |                                                             ^
13 warnings generated.
compiling SCB_Program.c...
compiling GI_Program.c...
MCAL/GPIO/GPIO_Program.c(12): warning: In file included from...
MCAL/GPIO/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/GPIO/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/GPIO/GPIO_Program.c(12): warning: In file included from...
MCAL/GPIO/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/GPIO/GPIO_Program.c(14): warning: In file included from...
MCAL/GPIO/GPIO_Private.h(138): warning: no newline at end of file [-Wnewline-eof]
  138 | #endif /*_GPIO_PRIVATE_H_*/
      |                            ^
MCAL/GPIO/GPIO_Program.c(15): warning: In file included from...
MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
MCAL/GPIO/GPIO_Program.c(16): warning: In file included from...
MCAL/GPIO/GPIO_Config.h(14): warning: no newline at end of file [-Wnewline-eof]
   14 | #endif /*_GPIO_CONFIG_H_*/
      |                           ^
MCAL/GPIO/GPIO_Program.c(38): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   38 |                 MGPIOA_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
      |                                  ^
MCAL/GPIO/GPIO_Program.c(38): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   38 |                 MGPIOA_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
      |                            ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(39): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   39 |                 MGPIOA_CRL |= ((Copy_uint8PinMode) << (4 * Copy_uint8PinID));
      |                            ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(44): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   44 |                 MGPIOA_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
      |                                  ^
MCAL/GPIO/GPIO_Program.c(44): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   44 |                 MGPIOA_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
      |                            ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(45): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   45 |                 MGPIOA_CRH |= ((Copy_uint8PinMode) << (4 * (Copy_uint8PinID - 8)));
      |                            ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(54): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   54 |                 MGPIOB_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
      |                                  ^
MCAL/GPIO/GPIO_Program.c(54): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   54 |                 MGPIOB_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
      |                            ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(55): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   55 |                 MGPIOB_CRL |= ((Copy_uint8PinMode) << (4 * Copy_uint8PinID));
      |                            ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(60): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   60 |                 MGPIOB_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
      |                                  ^
MCAL/GPIO/GPIO_Program.c(60): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   60 |                 MGPIOB_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
      |                            ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(61): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   61 |                 MGPIOB_CRH |= ((Copy_uint8PinMode) << (4 * (Copy_uint8PinID - 8)));
      |                            ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(70): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   70 |                 MGPIOC_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
      |                                  ^
MCAL/GPIO/GPIO_Program.c(70): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   70 |                 MGPIOC_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
      |                            ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(71): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   71 |                 MGPIOC_CRL |= ((Copy_uint8PinMode) << (4 * Copy_uint8PinID));
      |                            ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(77): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   77 |                 MGPIOC_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
      |                                  ^
MCAL/GPIO/GPIO_Program.c(77): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   77 |                 MGPIOC_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
      |                            ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(78): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   78 |                 MGPIOC_CRH |= ((Copy_uint8PinMode) << (4 * (Copy_uint8PinID - 8)));
      |                            ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/GPIO/GPIO_Program.c(358): warning: no newline at end of file [-Wnewline-eof]
  358 | }
      |  ^
24 warnings generated.
compiling GPIO_Program.c...
MCAL/RCC/RCC_Program.c(13): warning: In file included from...
MCAL/RCC/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/RCC/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/RCC/RCC_Program.c(13): warning: In file included from...
MCAL/RCC/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/RCC/RCC_Program.c(15): warning: In file included from...
MCAL/RCC/RCC_Private.h(129): warning: no newline at end of file [-Wnewline-eof]
  129 | #endif /*_RCC_PRIVATE_H_*/
      |                           ^
MCAL/RCC/RCC_Program.c(16): warning: In file included from...
MCAL/RCC/RCC_Config.h(86): warning: no newline at end of file [-Wnewline-eof]
   86 | #endif /*_RCC_CONFIG_H_*/
      |                          ^
MCAL/RCC/RCC_Program.c(47): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   47 |                 CLR_BIT(MRCC_CR, MRCC_CR_HSEBYP);
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/RCC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/RCC/RCC_Program.c(61): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   61 |             CLR_BIT(MRCC_CFGR, (MRCC_CFGR_SW_START + 1));
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/RCC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/RCC/RCC_Program.c(123): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  123 |     MRCC_CFGR &= ~(((uint32)0b1111) << (MRCC_CFGR_HPRE_START));
      |                             ^
MCAL/RCC/RCC_Program.c(124): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  124 |     MRCC_CFGR |= (((uint32)(MRCC_AHB_PRESCALAR)) << (MRCC_CFGR_HPRE_START));
      |                             ^
MCAL/RCC/RCC_Config.h(64): note: expanded from macro 'MRCC_AHB_PRESCALAR'
   64 | #define MRCC_AHB_PRESCALAR                          MRCC_AHB_CLK_DIV_1
      |                                                     ^
MCAL/RCC/RCC_Private.h(106): note: expanded from macro 'MRCC_AHB_CLK_DIV_1'
  106 | #define MRCC_AHB_CLK_DIV_1                               0b0000
      |                                                          ^
MCAL/RCC/RCC_Program.c(126): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  126 |     MRCC_CFGR &= ~(((uint32)0b111) << (MRCC_CFGR_PPRE1_START));
      |                             ^
MCAL/RCC/RCC_Program.c(127): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  127 |     MRCC_CFGR |= (((uint32)(MRCC_APB1_PRESCALAR)) << (MRCC_CFGR_PPRE1_START));
      |                             ^
MCAL/RCC/RCC_Config.h(74): note: expanded from macro 'MRCC_APB1_PRESCALAR'
   74 | #define MRCC_APB1_PRESCALAR                         MRCC_APB1_CLK_DIV_1
      |                                                     ^
MCAL/RCC/RCC_Private.h(117): note: expanded from macro 'MRCC_APB1_CLK_DIV_1'
  117 | #define MRCC_APB1_CLK_DIV_1                              0b000
      |                                                          ^
MCAL/RCC/RCC_Program.c(129): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  129 |     MRCC_CFGR &= ~(((uint32)0b111) << (MRCC_CFGR_PPRE2_START));
      |                             ^
MCAL/RCC/RCC_Program.c(130): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  130 |     MRCC_CFGR |= (((uint32)(MRCC_APB2_PRESCALAR)) << (MRCC_CFGR_PPRE2_START));
      |                             ^
MCAL/RCC/RCC_Config.h(84): note: expanded from macro 'MRCC_APB2_PRESCALAR'
   84 | #define MRCC_APB2_PRESCALAR                         MRCC_APB2_CLK_DIV_1
      |                                                     ^
MCAL/RCC/RCC_Private.h(124): note: expanded from macro 'MRCC_APB2_CLK_DIV_1'
  124 | #define MRCC_APB2_CLK_DIV_1                              0b000
      |                                                          ^
MCAL/RCC/RCC_Program.c(217): warning: no newline at end of file [-Wnewline-eof]
  217 | }
      |  ^
13 warnings generated.
compiling RCC_Program.c...
MCAL/RTC/RTC_Program.c(12): warning: In file included from...
MCAL/RTC/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/RTC/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/RTC/RTC_Program.c(12): warning: In file included from...
MCAL/RTC/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/RTC/RTC_Program.c(14): warning: In file included from...
MCAL/RTC/RTC_Private.h(155): warning: no newline at end of file [-Wnewline-eof]
  155 | #endif /*_RTC_PRIVATE_H_*/
      |                           ^
MCAL/RTC/RTC_Program.c(15): warning: In file included from...
MCAL/RTC/RTC_Interface.h(71): warning: no newline at end of file [-Wnewline-eof]
   71 | #endif /*_RTC_INTERFACE_H_*/
      |                             ^
MCAL/RTC/RTC_Program.c(16): warning: In file included from...
MCAL/RTC/RTC_Config.h(27): warning: no newline at end of file [-Wnewline-eof]
   27 | #endif /*_RTC_CONFIG_H_*/
      |                          ^
MCAL/RTC/RTC_Program.c(27): warning: use of an empty initializer is a C23 extension [-Wc23-extensions]
   27 |     struct tm time = {};
      |                      ^
MCAL/RTC/RTC_Program.c(40): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
   40 |         time_t Loc_SspecificTime_t = mktime(&Loc_SspecificTime);
      |                ^
MCAL/RTC/RTC_Program.c(27): warning: unused variable 'time' [-Wunused-variable]
   27 |     struct tm time = {};
      |               ^~~~
MCAL/RTC/RTC_Program.c(25): warning: no previous prototype for function 'MRTC_CalculateSeconds' [-Wmissing-prototypes]
   25 | Std_ReturnType MRTC_CalculateSeconds(Sdate_t* P_SDate, Stime_t* P_STime, uint32* P_uint32Seconds)
      |                ^
MCAL/RTC/RTC_Program.c(25): note: declare 'static' if the function is not intended to be used outside of this translation unit
   25 | Std_ReturnType MRTC_CalculateSeconds(Sdate_t* P_SDate, Stime_t* P_STime, uint32* P_uint32Seconds)
      | ^
      | static 
MCAL/RTC/RTC_Program.c(73): warning: implicit conversion loses integer precision: 'int' to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
   73 |         P_SDate -> m_years = (Loc_PBrokenTime -> tm_year) + 1900;
      |                            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
MCAL/RTC/RTC_Program.c(74): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
   74 |         P_SDate -> m_months = (Loc_PBrokenTime -> tm_mon) + 1;
      |                             ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
MCAL/RTC/RTC_Program.c(75): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
   75 |         P_SDate -> m_days = (Loc_PBrokenTime -> tm_mday);
      |                           ~  ~~~~~~~~~~~~~~~~~~~^~~~~~~
MCAL/RTC/RTC_Program.c(76): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
   76 |         P_STime -> m_hours = Loc_PBrokenTime -> tm_hour;
      |                            ~ ~~~~~~~~~~~~~~~~~~~^~~~~~~
MCAL/RTC/RTC_Program.c(77): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
   77 |         P_STime -> m_minutes = Loc_PBrokenTime -> tm_min;
      |                              ~ ~~~~~~~~~~~~~~~~~~~^~~~~~
MCAL/RTC/RTC_Program.c(78): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
   78 |         P_STime ->m_seconds = Loc_PBrokenTime -> tm_sec;
      |                             ~ ~~~~~~~~~~~~~~~~~~~^~~~~~
MCAL/RTC/RTC_Program.c(67): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
   67 |         time_t Loc_SspecificTime_t = mktime(&Loc_SspecificTime);
      |                ^
MCAL/RTC/RTC_Program.c(52): warning: no previous prototype for function 'MRTC_CalculateDateTime' [-Wmissing-prototypes]
   52 | Std_ReturnType MRTC_CalculateDateTime(uint32* P_uint32Seconds, Sdate_t* P_SDate, Stime_t* P_STime)
      |                ^
MCAL/RTC/RTC_Program.c(52): note: declare 'static' if the function is not intended to be used outside of this translation unit
   52 | Std_ReturnType MRTC_CalculateDateTime(uint32* P_uint32Seconds, Sdate_t* P_SDate, Stime_t* P_STime)
      | ^
      | static 
MCAL/RTC/RTC_Program.c(111): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  111 |         CLR_BIT(MRCC_BDCR_R, (MRCC_BDCR_RTCSEL_START_BIT + 1));
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/RTC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/RTC/RTC_Program.c(125): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  125 |     CLR_BIT((RTC -> CRL), MRTC_CRL_CNF_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/RTC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/RTC/RTC_Program.c(132): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  132 |         CLR_BIT((RTC -> CRH), MRTC_CRH_SECIE_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/RTC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/RTC/RTC_Program.c(139): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  139 |     CLR_BIT((RTC -> CRL), MRTC_CRL_RSF_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/RTC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/RTC/RTC_Program.c(144): warning: passing 'volatile Sdate_t *' (aka 'volatile struct Sdate *') to parameter of type 'Sdate_t *' (aka 'struct Sdate *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  144 |     MRTC_CalculateSeconds(&glbl_SReferenceDate, &glbl_SReferenceTime, &glbl_uint32ReferenceSeconds);
      |                           ^~~~~~~~~~~~~~~~~~~~
MCAL/RTC/RTC_Program.c(25): note: passing argument to parameter 'P_SDate' here
   25 | Std_ReturnType MRTC_CalculateSeconds(Sdate_t* P_SDate, Stime_t* P_STime, uint32* P_uint32Seconds)
      |                                               ^
MCAL/RTC/RTC_Program.c(144): warning: passing 'volatile Stime_t *' (aka 'volatile struct Stime *') to parameter of type 'Stime_t *' (aka 'struct Stime *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  144 |     MRTC_CalculateSeconds(&glbl_SReferenceDate, &glbl_SReferenceTime, &glbl_uint32ReferenceSeconds);
      |                                                 ^~~~~~~~~~~~~~~~~~~~
MCAL/RTC/RTC_Program.c(25): note: passing argument to parameter 'P_STime' here
   25 | Std_ReturnType MRTC_CalculateSeconds(Sdate_t* P_SDate, Stime_t* P_STime, uint32* P_uint32Seconds)
      |                                                                 ^
MCAL/RTC/RTC_Program.c(144): warning: passing 'volatile uint32 *' (aka 'volatile unsigned long *') to parameter of type 'uint32 *' (aka 'unsigned long *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  144 |     MRTC_CalculateSeconds(&glbl_SReferenceDate, &glbl_SReferenceTime, &glbl_uint32ReferenceSeconds);
      |                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/RTC/RTC_Program.c(25): note: passing argument to parameter 'P_uint32Seconds' here
   25 | Std_ReturnType MRTC_CalculateSeconds(Sdate_t* P_SDate, Stime_t* P_STime, uint32* P_uint32Seconds)
      |                                                                                  ^
MCAL/RTC/RTC_Program.c(121): warning: while loop has empty body [-Wempty-body]
  121 |         while(!(GET_BIT((RTC -> CRL), MRTC_CRL_RTOFF_BIT)));
      |                                                            ^
MCAL/RTC/RTC_Program.c(121): note: put the semicolon on a separate line to silence this warning
MCAL/RTC/RTC_Program.c(127): warning: while loop has empty body [-Wempty-body]
  127 |         while(!(GET_BIT((RTC -> CRL), MRTC_CRL_RTOFF_BIT)));
      |                                                            ^
MCAL/RTC/RTC_Program.c(127): note: put the semicolon on a separate line to silence this warning
MCAL/RTC/RTC_Program.c(175): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  175 |             CLR_BIT((RTC -> CRL), MRTC_CRL_CNF_BIT);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/RTC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/RTC/RTC_Program.c(247): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  247 |                                 CLR_BIT(RTC->CRL, MRTC_CRL_SECF_BIT);
      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/RTC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/RTC/RTC_Program.c(253): warning: no newline at end of file [-Wnewline-eof]
  253 | }
      |  ^
MCAL/RTC/RTC_Program.c(242): warning: no previous prototype for function 'RTC_IRQHandler' [-Wmissing-prototypes]
  242 | void RTC_IRQHandler(void)
      |      ^
MCAL/RTC/RTC_Program.c(242): note: declare 'static' if the function is not intended to be used outside of this translation unit
  242 | void RTC_IRQHandler(void)
      | ^
      | static 
30 warnings generated.
compiling RTC_Program.c...
MCAL/EXTI/EXTI_Program.c(11): warning: In file included from...
MCAL/EXTI/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/EXTI/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/EXTI/EXTI_Program.c(11): warning: In file included from...
MCAL/EXTI/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/EXTI/EXTI_Program.c(13): warning: In file included from...
MCAL/EXTI/EXTI_Private.h(31): warning: no newline at end of file [-Wnewline-eof]
   31 | #endif /*_EXTI_PRIVATE_H_*/
      |                            ^
MCAL/EXTI/EXTI_Program.c(14): warning: In file included from...
MCAL/EXTI/EXTI_Interface.h(44): warning: no newline at end of file [-Wnewline-eof]
   44 | #endif /*_EXTI_INTERFACE_H_*/
      |                              ^
MCAL/EXTI/EXTI_Program.c(15): warning: In file included from...
MCAL/EXTI/EXTI_Config.h(14): warning: no newline at end of file [-Wnewline-eof]
   14 | #endif /*_EXTI_CONFIG_H_*/
      |                           ^
MCAL/EXTI/EXTI_Program.c(44): warning: unannotated fall-through between switch labels [-Wimplicit-fallthrough]
   44 |             default:
      |             ^
MCAL/EXTI/EXTI_Program.c(44): note: insert '__attribute__((fallthrough));' to silence this warning
   44 |             default:
      |             ^
      |             __attribute__((fallthrough)); 
MCAL/EXTI/EXTI_Program.c(44): note: insert 'break;' to avoid fall-through
   44 |             default:
      |             ^
      |             break; 
MCAL/EXTI/EXTI_Program.c(101): warning: no previous prototype for function 'EXTI0_IRQHandler' [-Wmissing-prototypes]
  101 | void EXTI0_IRQHandler(void)
      |      ^
MCAL/EXTI/EXTI_Program.c(101): note: declare 'static' if the function is not intended to be used outside of this translation unit
  101 | void EXTI0_IRQHandler(void)
      | ^
      | static 
MCAL/EXTI/EXTI_Program.c(113): warning: no previous prototype for function 'EXTI1_IRQHandler' [-Wmissing-prototypes]
  113 | void EXTI1_IRQHandler(void)
      |      ^
MCAL/EXTI/EXTI_Program.c(113): note: declare 'static' if the function is not intended to be used outside of this translation unit
  113 | void EXTI1_IRQHandler(void)
      | ^
      | static 
MCAL/EXTI/EXTI_Program.c(125): warning: no previous prototype for function 'EXTI2_IRQHandler' [-Wmissing-prototypes]
  125 | void EXTI2_IRQHandler(void)
      |      ^
MCAL/EXTI/EXTI_Program.c(125): note: declare 'static' if the function is not intended to be used outside of this translation unit
  125 | void EXTI2_IRQHandler(void)
      | ^
      | static 
MCAL/EXTI/EXTI_Program.c(137): warning: no previous prototype for function 'EXTI3_IRQHandler' [-Wmissing-prototypes]
  137 | void EXTI3_IRQHandler(void)
      |      ^
MCAL/EXTI/EXTI_Program.c(137): note: declare 'static' if the function is not intended to be used outside of this translation unit
  137 | void EXTI3_IRQHandler(void)
      | ^
      | static 
MCAL/EXTI/EXTI_Program.c(149): warning: no previous prototype for function 'EXTI4_IRQHandler' [-Wmissing-prototypes]
  149 | void EXTI4_IRQHandler(void)
      |      ^
MCAL/EXTI/EXTI_Program.c(149): note: declare 'static' if the function is not intended to be used outside of this translation unit
  149 | void EXTI4_IRQHandler(void)
      | ^
      | static 
MCAL/EXTI/EXTI_Program.c(161): warning: no previous prototype for function 'EXTI9_5_IRQHandler' [-Wmissing-prototypes]
  161 | void EXTI9_5_IRQHandler(void)
      |      ^
MCAL/EXTI/EXTI_Program.c(161): note: declare 'static' if the function is not intended to be used outside of this translation unit
  161 | void EXTI9_5_IRQHandler(void)
      | ^
      | static 
MCAL/EXTI/EXTI_Program.c(306): warning: no newline at end of file [-Wnewline-eof]
  306 | }
      |  ^
MCAL/EXTI/EXTI_Program.c(228): warning: no previous prototype for function 'EXTI15_10_IRQHandler' [-Wmissing-prototypes]
  228 | void EXTI15_10_IRQHandler(void)
      |      ^
MCAL/EXTI/EXTI_Program.c(228): note: declare 'static' if the function is not intended to be used outside of this translation unit
  228 | void EXTI15_10_IRQHandler(void)
      | ^
      | static 
MCAL/EXTI/EXTI_Program.c(93): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   93 |         glbl_PEXTICallbackFunctions[Copy_uint8EXTILine] = P_EXTICallBackFunc;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(115): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  115 |     if(glbl_PEXTICallbackFunctions[1] != NULL_PTR)
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(117): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  117 |         (glbl_PEXTICallbackFunctions[1])();
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(127): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  127 |     if(glbl_PEXTICallbackFunctions[2] != NULL_PTR)
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(129): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  129 |         (glbl_PEXTICallbackFunctions[2])();
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(139): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  139 |     if(glbl_PEXTICallbackFunctions[3] != NULL_PTR)
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(141): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  141 |         (glbl_PEXTICallbackFunctions[3])();
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(151): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  151 |     if(glbl_PEXTICallbackFunctions[4] != NULL_PTR)
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(153): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  153 |         (glbl_PEXTICallbackFunctions[4])();
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(165): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  165 |         if(glbl_PEXTICallbackFunctions[5] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(167): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  167 |             (glbl_PEXTICallbackFunctions[5])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(177): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  177 |         if(glbl_PEXTICallbackFunctions[6] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(179): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  179 |             (glbl_PEXTICallbackFunctions[6])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(189): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  189 |         if(glbl_PEXTICallbackFunctions[7] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(191): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  191 |             (glbl_PEXTICallbackFunctions[7])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(201): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  201 |         if(glbl_PEXTICallbackFunctions[8] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(203): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  203 |             (glbl_PEXTICallbackFunctions[8])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(213): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  213 |         if(glbl_PEXTICallbackFunctions[9] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(215): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  215 |             (glbl_PEXTICallbackFunctions[9])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(232): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  232 |         if(glbl_PEXTICallbackFunctions[10] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(234): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  234 |             (glbl_PEXTICallbackFunctions[10])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(244): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  244 |         if(glbl_PEXTICallbackFunctions[11] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(246): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  246 |             (glbl_PEXTICallbackFunctions[11])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(256): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  256 |         if(glbl_PEXTICallbackFunctions[12] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(258): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  258 |             (glbl_PEXTICallbackFunctions[12])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(268): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  268 |         if(glbl_PEXTICallbackFunctions[13] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(270): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  270 |             (glbl_PEXTICallbackFunctions[13])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(280): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  280 |         if(glbl_PEXTICallbackFunctions[14] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(282): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  282 |             (glbl_PEXTICallbackFunctions[14])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(292): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  292 |         if(glbl_PEXTICallbackFunctions[15] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/EXTI/EXTI_Program.c(294): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  294 |             (glbl_PEXTICallbackFunctions[15])();
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
45 warnings generated.
compiling EXTI_Program.c...
MCAL/STK/STK_Program.c(2): warning: In file included from...
MCAL/STK/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/STK/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/STK/STK_Program.c(2): warning: In file included from...
MCAL/STK/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/STK/STK_Program.c(4): warning: In file included from...
MCAL/STK/STK_Private.h(88): warning: no newline at end of file [-Wnewline-eof]
   88 | #endif /*_STK_PRIVATE_H_*/
      |                           ^
MCAL/STK/STK_Program.c(5): warning: In file included from...
MCAL/STK/STK_Interface.h(69): warning: no newline at end of file [-Wnewline-eof]
   69 | #endif /*_STK_INTERFACE_H_*/
      |                             ^
MCAL/STK/STK_Program.c(69): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   69 |         CLR_BIT((STK -> CTRL), STK_CTRL_CLKSOURCE);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/STK/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/STK/STK_Program.c(79): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   79 |         CLR_BIT((STK -> CTRL), STK_CTRL_TICKINT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/STK/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/STK/STK_Program.c(135): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  135 |     CLR_BIT((STK -> CTRL), STK_CTRL_ENABLE);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/STK/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/STK/STK_Program.c(149): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  149 |     CLR_BIT((STK -> CTRL), STK_CTRL_ENABLE);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/STK/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/STK/STK_Program.c(170): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  170 |         CLR_BIT((STK -> CTRL), STK_CTRL_ENABLE);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/STK/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/STK/STK_Program.c(185): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  185 |         CLR_BIT((STK -> CTRL), STK_CTRL_ENABLE);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/STK/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/STK/STK_Program.c(222): warning: no previous prototype for function 'SysTick_Handler' [-Wmissing-prototypes]
  222 | void SysTick_Handler(void)
      |      ^
MCAL/STK/STK_Program.c(222): note: declare 'static' if the function is not intended to be used outside of this translation unit
  222 | void SysTick_Handler(void)
      | ^
      | static 
11 warnings generated.
compiling STK_Program.c...
MCAL/NVIC/NVIC_Program.c(12): warning: In file included from...
MCAL/NVIC/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/NVIC/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/NVIC/NVIC_Program.c(12): warning: In file included from...
MCAL/NVIC/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/NVIC/NVIC_Program.c(14): warning: In file included from...
MCAL/NVIC/NVIC_Private.h(211): warning: no newline at end of file [-Wnewline-eof]
  211 | #endif /*_NVIC_PRIVATE_H_*/
      |                            ^
MCAL/NVIC/NVIC_Program.c(15): warning: In file included from...
MCAL/NVIC/NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
  151 | #endif /*_NVIC_INTERFACE_H_*/
      |                              ^
MCAL/NVIC/NVIC_Program.c(16): warning: In file included from...
MCAL/NVIC/NVIC_Config.h(16): warning: no newline at end of file [-Wnewline-eof]
   16 | #endif /*_NVIC_CONFIG_H_*/
      |                           ^
MCAL/NVIC/NVIC_Program.c(202): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  202 |                 Loc_uint8PriorityValue = (Copy_uint8GroupPriority << 4);
      |                                        ~  ~~~~~~~~~~~~~~~~~~~~~~~~^~~~
MCAL/NVIC/NVIC_Program.c(210): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  210 |                 Loc_uint8PriorityValue = ((Copy_uint8SubGroupPriority) | (Copy_uint8GroupPriority << ((Loc_uint16AIRCRPriorityGroupVal - (uint16)MNVIC_PRIORITY_GROUP_4_SUB_0) / 0x100)));
      |                                        ~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/NVIC/NVIC_Program.c(211): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  211 |                 NVIC -> IPR[Copy_uint32InterruptNumber] = Loc_uint8PriorityValue << 4;
      |                                                         ~ ~~~~~~~~~~~~~~~~~~~~~~~^~~~
MCAL/NVIC/NVIC_Program.c(216): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  216 |                 Loc_uint8PriorityValue = (Copy_uint8SubGroupPriority << 4);
      |                                        ~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
MCAL/NVIC/NVIC_Program.c(38): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   38 |         SET_BIT((NVIC -> ISER[1]), Copy_uint32InterruptNumber);
      |         ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/NVIC/NVIC_Private.h(135): note: expanded from macro 'NVIC'
  135 | #define NVIC                                            ((MNVIC_TypeDef *)MNVIC_BASE_ADDRESS)
      |                                                         ^
MCAL/NVIC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/NVIC/NVIC_Program.c(66): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   66 |         SET_BIT((NVIC -> ICER[1]), Copy_uint32InterruptNumber);
      |         ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/NVIC/NVIC_Private.h(135): note: expanded from macro 'NVIC'
  135 | #define NVIC                                            ((MNVIC_TypeDef *)MNVIC_BASE_ADDRESS)
      |                                                         ^
MCAL/NVIC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/NVIC/NVIC_Program.c(94): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   94 |         SET_BIT((NVIC -> ISPR[1]), Copy_uint32InterruptNumber);
      |         ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/NVIC/NVIC_Private.h(135): note: expanded from macro 'NVIC'
  135 | #define NVIC                                            ((MNVIC_TypeDef *)MNVIC_BASE_ADDRESS)
      |                                                         ^
MCAL/NVIC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/NVIC/NVIC_Program.c(122): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  122 |         SET_BIT((NVIC -> ICPR[1]), Copy_uint32InterruptNumber);
      |         ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/NVIC/NVIC_Private.h(135): note: expanded from macro 'NVIC'
  135 | #define NVIC                                            ((MNVIC_TypeDef *)MNVIC_BASE_ADDRESS)
      |                                                         ^
MCAL/NVIC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/NVIC/NVIC_Program.c(153): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  153 |             *P_uint8ActiveFlag = GET_BIT((NVIC -> IABR[1]), Copy_uint32InterruptNumber);
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/NVIC/NVIC_Private.h(135): note: expanded from macro 'NVIC'
  135 | #define NVIC                                            ((MNVIC_TypeDef *)MNVIC_BASE_ADDRESS)
      |                                                         ^
MCAL/NVIC/../../LIB/BIT_MATH/BIT_MATH.h(17): note: expanded from macro 'GET_BIT'
   17 | #define GET_BIT(REG,BIT)                        ((REG >> BIT) & 1)
      |                                                   ^~~
MCAL/NVIC/NVIC_Program.c(203): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  203 |                 NVIC -> IPR[Copy_uint32InterruptNumber] = Loc_uint8PriorityValue;
      |                 ^~~~~~~~~~~
MCAL/NVIC/NVIC_Private.h(135): note: expanded from macro 'NVIC'
  135 | #define NVIC                                            ((MNVIC_TypeDef *)MNVIC_BASE_ADDRESS)
      |                                                         ^
MCAL/NVIC/NVIC_Program.c(211): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  211 |                 NVIC -> IPR[Copy_uint32InterruptNumber] = Loc_uint8PriorityValue << 4;
      |                 ^~~~~~~~~~~
MCAL/NVIC/NVIC_Private.h(135): note: expanded from macro 'NVIC'
  135 | #define NVIC                                            ((MNVIC_TypeDef *)MNVIC_BASE_ADDRESS)
      |                                                         ^
MCAL/NVIC/NVIC_Program.c(217): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  217 |                 NVIC -> IPR[Copy_uint32InterruptNumber] = Loc_uint8PriorityValue;
      |                 ^~~~~~~~~~~
MCAL/NVIC/NVIC_Private.h(135): note: expanded from macro 'NVIC'
  135 | #define NVIC                                            ((MNVIC_TypeDef *)MNVIC_BASE_ADDRESS)
      |                                                         ^
17 warnings generated.
compiling NVIC_Program.c...
MCAL/ADC/ADC_Program.c(11): warning: In file included from...
MCAL/ADC/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/ADC/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/ADC/ADC_Program.c(11): warning: In file included from...
MCAL/ADC/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/ADC/ADC_Program.c(13): warning: In file included from...
MCAL/ADC/ADC_Private.h(312): warning: no newline at end of file [-Wnewline-eof]
  312 | #endif /*_ADC_PRIVATE_H_*/
      |                           ^
MCAL/ADC/ADC_Program.c(14): warning: In file included from...
MCAL/ADC/ADC_Interface.h(70): warning: no newline at end of file [-Wnewline-eof]
   70 | #endif /*_ADC_INTERFACE_H_*/
      |                             ^
MCAL/ADC/ADC_Program.c(15): warning: In file included from...
MCAL/ADC/ADC_Config.h(77): warning: no newline at end of file [-Wnewline-eof]
   77 | #endif /*_ADC_CONFIG_H_*/
      |                          ^
MCAL/ADC/ADC_Program.c(18): warning: redundant parentheses surrounding declarator [-Wredundant-parens]
   18 | static volatile ptr_to_func_t (glbl_EOCCallbackFunc[2]) = {NULL_PTR};
      |                               ^~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/ADC/ADC_Program.c(24): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   24 |     ADC[Copy_uint32ADCSelect] -> CR1 &= ~((0b1111) << (MADC_CR1_DUALMOD_START_BIT));
      |                                            ^
MCAL/ADC/ADC_Program.c(24): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   24 |     ADC[Copy_uint32ADCSelect] -> CR1 &= ~((0b1111) << (MADC_CR1_DUALMOD_START_BIT));
      |                                      ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/ADC/ADC_Program.c(25): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   25 |     ADC[Copy_uint32ADCSelect] -> CR1 |= ((MADC_OPERATION_MODE) << (MADC_CR1_DUALMOD_START_BIT));
      |                                           ^
MCAL/ADC/ADC_Config.h(27): note: expanded from macro 'MADC_OPERATION_MODE'
   27 | #define MADC_OPERATION_MODE                                                     MADC_INDEPENDENT_MODE
      |                                                                                 ^
MCAL/ADC/ADC_Private.h(286): note: expanded from macro 'MADC_INDEPENDENT_MODE'
  286 | #define MADC_INDEPENDENT_MODE                       0b0000
      |                                                     ^
MCAL/ADC/ADC_Program.c(35): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   35 |     CLR_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_CONT_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/ADC/ADC_Program.c(38): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   38 |         CLR_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_ALIGN_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/ADC/ADC_Program.c(47): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   47 |         ADC[Copy_uint32ADCSelect] -> CR2 &= ~((0b111) << (MADC_CR2_EXTSEL_START_BIT));
      |                                                ^
MCAL/ADC/ADC_Program.c(47): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   47 |         ADC[Copy_uint32ADCSelect] -> CR2 &= ~((0b111) << (MADC_CR2_EXTSEL_START_BIT));
      |                                          ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/ADC/ADC_Program.c(48): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   48 |         ADC[Copy_uint32ADCSelect] -> CR2 |= ((MADC_EXTERNAL_TRIGGER_SELECT) << (MADC_CR2_EXTSEL_START_BIT));
      |                                               ^
MCAL/ADC/ADC_Config.h(61): note: expanded from macro 'MADC_EXTERNAL_TRIGGER_SELECT'
   61 |     #define MADC_EXTERNAL_TRIGGER_SELECT                                        MADC_TRIGGER_SWSTART
      |                                                                                 ^
MCAL/ADC/ADC_Private.h(283): note: expanded from macro 'MADC_TRIGGER_SWSTART'
  283 | #define MADC_TRIGGER_SWSTART                        0b111
      |                                                     ^
MCAL/ADC/ADC_Program.c(69): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   69 |     ADC[Copy_uint32ADCSelect] -> SQR1 &= ~((0b1111) << 20);
      |                                             ^
MCAL/ADC/ADC_Program.c(69): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   69 |     ADC[Copy_uint32ADCSelect] -> SQR1 &= ~((0b1111) << 20);
      |                                       ~~ ^~~~~~~~~~~~~~~~~
MCAL/ADC/ADC_Program.c(70): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   70 |     ADC[Copy_uint32ADCSelect] -> SQR3 &= ~((0b11111) << 0);
      |                                             ^
MCAL/ADC/ADC_Program.c(70): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   70 |     ADC[Copy_uint32ADCSelect] -> SQR3 &= ~((0b11111) << 0);
      |                                       ~~ ^~~~~~~~~~~~~~~~~
MCAL/ADC/ADC_Program.c(71): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   71 |     ADC[Copy_uint32ADCSelect] -> SQR3 |= ((Copy_uint32ChannelSelect) << 0);
      |                                       ~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
MCAL/ADC/ADC_Program.c(84): warning: implicit conversion loses integer precision: 'volatile uint32' (aka 'volatile unsigned long') to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
   84 |         *P_uint16ConvertedData = ADC[Copy_uint32ADCSelect] -> DR;
      |                                ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
MCAL/ADC/ADC_Program.c(98): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   98 |         ADC[Copy_uint32ADCSelect] -> SQR1 &= ~((0b1111) << 20);
      |                                                 ^
MCAL/ADC/ADC_Program.c(98): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   98 |         ADC[Copy_uint32ADCSelect] -> SQR1 &= ~((0b1111) << 20);
      |                                           ~~ ^~~~~~~~~~~~~~~~~
MCAL/ADC/ADC_Program.c(99): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   99 |         ADC[Copy_uint32ADCSelect] -> SQR3 &= ~((0b11111) << 0);
      |                                                 ^
MCAL/ADC/ADC_Program.c(99): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   99 |         ADC[Copy_uint32ADCSelect] -> SQR3 &= ~((0b11111) << 0);
      |                                           ~~ ^~~~~~~~~~~~~~~~~
MCAL/ADC/ADC_Program.c(100): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  100 |         ADC[Copy_uint32ADCSelect] -> SQR3 = (Copy_uint32ChannelSelect) << 0;
      |                                           ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
MCAL/ADC/ADC_Program.c(106): warning: implicit conversion loses integer precision: 'volatile uint32' (aka 'volatile unsigned long') to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
  106 |         *P_uint16ConvertedData = ADC[Copy_uint32ADCSelect] -> DR;
      |                                ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
MCAL/ADC/ADC_Program.c(130): warning: no previous prototype for function 'ADC1_2_IRQHandler' [-Wmissing-prototypes]
  130 | void ADC1_2_IRQHandler(void)
      |      ^
MCAL/ADC/ADC_Program.c(130): note: declare 'static' if the function is not intended to be used outside of this translation unit
  130 | void ADC1_2_IRQHandler(void)
      | ^
      | static 
MCAL/ADC/ADC_Program.c(24): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   24 |     ADC[Copy_uint32ADCSelect] -> CR1 &= ~((0b1111) << (MADC_CR1_DUALMOD_START_BIT));
      |     ^~~
MCAL/ADC/ADC_Program.c(25): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   25 |     ADC[Copy_uint32ADCSelect] -> CR1 |= ((MADC_OPERATION_MODE) << (MADC_CR1_DUALMOD_START_BIT));
      |     ^~~
MCAL/ADC/ADC_Program.c(28): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   28 |         SET_BIT((ADC[Copy_uint32ADCSelect] -> CR1), MADC_CR1_EOCIE_BIT);
      |                  ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/ADC/ADC_Program.c(35): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   35 |     CLR_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_CONT_BIT);
      |              ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/ADC/ADC_Program.c(38): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   38 |         CLR_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_ALIGN_BIT);
      |                  ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/ADC/ADC_Program.c(46): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   46 |         SET_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_EXTTRIG_BIT);
      |                  ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/ADC/ADC_Program.c(47): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   47 |         ADC[Copy_uint32ADCSelect] -> CR2 &= ~((0b111) << (MADC_CR2_EXTSEL_START_BIT));
      |         ^~~
MCAL/ADC/ADC_Program.c(48): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   48 |         ADC[Copy_uint32ADCSelect] -> CR2 |= ((MADC_EXTERNAL_TRIGGER_SELECT) << (MADC_CR2_EXTSEL_START_BIT));
      |         ^~~
MCAL/ADC/ADC_Program.c(54): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   54 |     SET_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_ADON_BIT);
      |              ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/ADC/ADC_Program.c(56): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   56 |     SET_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_RSTCAL_BIT);
      |              ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/ADC/ADC_Program.c(57): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   57 |     while(GET_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_RSTCAL_BIT));
      |                    ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(17): note: expanded from macro 'GET_BIT'
   17 | #define GET_BIT(REG,BIT)                        ((REG >> BIT) & 1)
      |                                                   ^~~
MCAL/ADC/ADC_Program.c(59): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   59 |     SET_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_CAL_BIT);
      |              ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/ADC/ADC_Program.c(60): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   60 |     while(GET_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_CAL_BIT));
      |                    ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(17): note: expanded from macro 'GET_BIT'
   17 | #define GET_BIT(REG,BIT)                        ((REG >> BIT) & 1)
      |                                                   ^~~
MCAL/ADC/ADC_Program.c(69): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   69 |     ADC[Copy_uint32ADCSelect] -> SQR1 &= ~((0b1111) << 20);
      |     ^~~
MCAL/ADC/ADC_Program.c(70): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   70 |     ADC[Copy_uint32ADCSelect] -> SQR3 &= ~((0b11111) << 0);
      |     ^~~
MCAL/ADC/ADC_Program.c(71): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   71 |     ADC[Copy_uint32ADCSelect] -> SQR3 |= ((Copy_uint32ChannelSelect) << 0);
      |     ^~~
MCAL/ADC/ADC_Program.c(73): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   73 |     SET_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_SWSTART_BIT);
      |              ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/ADC/ADC_Program.c(84): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   84 |         *P_uint16ConvertedData = ADC[Copy_uint32ADCSelect] -> DR;
      |                                  ^~~
MCAL/ADC/ADC_Program.c(98): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   98 |         ADC[Copy_uint32ADCSelect] -> SQR1 &= ~((0b1111) << 20);
      |         ^~~
MCAL/ADC/ADC_Program.c(99): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   99 |         ADC[Copy_uint32ADCSelect] -> SQR3 &= ~((0b11111) << 0);
      |         ^~~
MCAL/ADC/ADC_Program.c(100): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  100 |         ADC[Copy_uint32ADCSelect] -> SQR3 = (Copy_uint32ChannelSelect) << 0;
      |         ^~~
MCAL/ADC/ADC_Program.c(102): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  102 |         SET_BIT((ADC[Copy_uint32ADCSelect] -> CR2), MADC_CR2_SWSTART_BIT);
      |                  ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/ADC/ADC_Program.c(104): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  104 |         while(!(GET_BIT((ADC[Copy_uint32ADCSelect] -> SR), MADC_SR_EOC_BIT)));
      |                          ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(17): note: expanded from macro 'GET_BIT'
   17 | #define GET_BIT(REG,BIT)                        ((REG >> BIT) & 1)
      |                                                   ^~~
MCAL/ADC/ADC_Program.c(106): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  106 |         *P_uint16ConvertedData = ADC[Copy_uint32ADCSelect] -> DR;
      |                                  ^~~
MCAL/ADC/ADC_Program.c(120): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  120 |         glbl_EOCCallbackFunc[Copy_uint32ADCSelect] = P_funcCallback;
      |         ^~~~~~~~~~~~~~~~~~~~
MCAL/ADC/ADC_Program.c(143): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  143 |     else if(GET_BIT((ADC[1] -> SR), MADC_SR_EOC_BIT))
      |                      ^~~
MCAL/ADC/../../LIB/BIT_MATH/BIT_MATH.h(17): note: expanded from macro 'GET_BIT'
   17 | #define GET_BIT(REG,BIT)                        ((REG >> BIT) & 1)
      |                                                   ^~~
MCAL/ADC/ADC_Program.c(145): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  145 |                 if(glbl_EOCCallbackFunc[1] != NULL_PTR)
      |                    ^~~~~~~~~~~~~~~~~~~~
MCAL/ADC/ADC_Program.c(147): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  147 |             (glbl_EOCCallbackFunc[1])();
      |              ^~~~~~~~~~~~~~~~~~~~
55 warnings generated.
compiling ADC_Program.c...
MCAL/UART/UART_Program.c(11): warning: In file included from...
MCAL/UART/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/UART/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/UART/UART_Program.c(11): warning: In file included from...
MCAL/UART/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/UART/UART_Program.c(13): warning: In file included from...
MCAL/UART/UART_Private.h(297): warning: no newline at end of file [-Wnewline-eof]
  297 | #endif /*_UART_PRIVATE_H_*/
      |                            ^
MCAL/UART/UART_Program.c(14): warning: In file included from...
MCAL/UART/UART_Interface.h(129): warning: no newline at end of file [-Wnewline-eof]
  129 | #endif /*_UART_INTERFACE_H_*/
      |                              ^
MCAL/UART/UART_Program.c(15): warning: In file included from...
MCAL/UART/UART_Config.h(52): warning: no newline at end of file [-Wnewline-eof]
   52 | #endif /*_UART_CONFIG_H_*/
      |                           ^
MCAL/UART/UART_Program.c(35): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   35 |         CLR_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_M_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(43): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   43 |         CLR_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_PCE_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(54): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   54 |     ((UART[Copy_UARTChoice]) -> CR2) &= ~(((uint32) 0b11) << MUART_CR2_STOP_START_BIT);
      |                                                     ^
MCAL/UART/UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   56 |     #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
      |           ^
MCAL/UART/UART_Config.h(33): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
   33 | #define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
      |                                         ^
MCAL/UART/UART_Private.h(280): note: expanded from macro 'MUART_ONE_STOP_BIT'
  280 | #define MUART_ONE_STOP_BIT                          0b00
      |                                                     ^
MCAL/UART/UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   56 |     #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
      |                                    ^
MCAL/UART/UART_Private.h(281): note: expanded from macro 'MUART_HALF_STOP_BIT'
  281 | #define MUART_HALF_STOP_BIT                         0b01
      |                                                     ^
MCAL/UART/UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   56 |     #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
      |                                                             ^
MCAL/UART/UART_Config.h(33): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
   33 | #define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
      |                                         ^
MCAL/UART/UART_Private.h(280): note: expanded from macro 'MUART_ONE_STOP_BIT'
  280 | #define MUART_ONE_STOP_BIT                          0b00
      |                                                     ^
MCAL/UART/UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   56 |     #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
      |                                                                                      ^
MCAL/UART/UART_Private.h(280): note: expanded from macro 'MUART_ONE_STOP_BIT'
  280 | #define MUART_ONE_STOP_BIT                          0b00
      |                                                     ^
MCAL/UART/UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   56 |     #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
      |                                                                                                              ^
MCAL/UART/UART_Config.h(33): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
   33 | #define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
      |                                         ^
MCAL/UART/UART_Private.h(280): note: expanded from macro 'MUART_ONE_STOP_BIT'
  280 | #define MUART_ONE_STOP_BIT                          0b00
      |                                                     ^
MCAL/UART/UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   56 |     #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
      |                                                                                                                                       ^
MCAL/UART/UART_Private.h(283): note: expanded from macro 'MUART_ONE_HALF_STOP_BIT'
  283 | #define MUART_ONE_HALF_STOP_BIT                     0b11
      |                                                     ^
MCAL/UART/UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   56 |     #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
      |                                                                                                                                                                    ^
MCAL/UART/UART_Config.h(33): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
   33 | #define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
      |                                         ^
MCAL/UART/UART_Private.h(280): note: expanded from macro 'MUART_ONE_STOP_BIT'
  280 | #define MUART_ONE_STOP_BIT                          0b00
      |                                                     ^
MCAL/UART/UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   56 |     #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
      |                                                                                                                                                                                             ^
MCAL/UART/UART_Private.h(282): note: expanded from macro 'MUART_TWO_STOP_BIT'
  282 | #define MUART_TWO_STOP_BIT                          0b10
      |                                                     ^
MCAL/UART/UART_Program.c(57): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   57 |         ((UART[Copy_UARTChoice]) -> CR2) |= (((uint32) MUART_NO_OF_STOP_BITS) << MUART_CR2_STOP_START_BIT);
      |                                                        ^
MCAL/UART/UART_Config.h(33): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
   33 | #define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
      |                                         ^
MCAL/UART/UART_Private.h(280): note: expanded from macro 'MUART_ONE_STOP_BIT'
  280 | #define MUART_ONE_STOP_BIT                          0b00
      |                                                     ^
MCAL/UART/UART_Program.c(65): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   65 |         CLR_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_TCIE_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(82): warning: implicit conversion increases floating-point precision: 'float32' (aka 'float') to 'double' [-Wdouble-promotion]
   82 |     uint16 Loc_uint16Fraction = (uint16)(((Loc_float32UARTDIV - Loc_uint16Mantissa) * 16) + 0.5);
      |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~  ~
MCAL/UART/UART_Program.c(89): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   89 |     ((UART[Copy_UARTChoice]) -> BRR) = (Loc_uint16Fraction << MUART_BRR_FRACTION_START_BIT) | (Loc_uint16Mantissa << MUART_BRR_MANTISSA_START_BIT);
      |                                      ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(95): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   95 |         CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_TC_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(96): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   96 |     CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_RXNE_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(79): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
   79 |     float32 Loc_float32UARTDIV = (float32)MUART_CLK_FREQ / (16 * MUART_BAUD_RATE);
      |             ^
MCAL/UART/UART_Program.c(126): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  126 |     CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_TC_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(114): warning: while loop has empty body [-Wempty-body]
  114 |     while(!(GET_BIT(((UART[Copy_UARTChoice]) -> SR), MUART_SR_TXE_BIT)));
      |                                                                         ^
MCAL/UART/UART_Program.c(114): note: put the semicolon on a separate line to silence this warning
MCAL/UART/UART_Program.c(145): warning: while loop has empty body [-Wempty-body]
  145 |     while(!(GET_BIT(((UART[Copy_UARTChoice]) -> SR), MUART_SR_TXE_BIT)));
      |                                                                         ^
MCAL/UART/UART_Program.c(145): note: put the semicolon on a separate line to silence this warning
MCAL/UART/UART_Program.c(174): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  174 |         CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_RXNE_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(237): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  237 |         CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_RXNE_BIT);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(328): warning: implicit conversion loses integer precision: 'uint32' (aka 'unsigned long') to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
  328 |         MUART_TxChar(Copy_UARTChoice, (Copy_uint32Value + 48));
      |         ~~~~~~~~~~~~                   ~~~~~~~~~~~~~~~~~^~~~
MCAL/UART/UART_Program.c(362): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  362 |     CLR_BIT(((UART[0]) -> SR) , MUART_SR_TC_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(363): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  363 |     CLR_BIT(((UART[0]) -> SR) , MUART_SR_RXNE_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(352): warning: no previous prototype for function 'USART1_IRQHandler' [-Wmissing-prototypes]
  352 | void USART1_IRQHandler(void)
      |      ^
MCAL/UART/UART_Program.c(352): note: declare 'static' if the function is not intended to be used outside of this translation unit
  352 | void USART1_IRQHandler(void)
      | ^
      | static 
MCAL/UART/UART_Program.c(375): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  375 |     CLR_BIT(((UART[1]) -> SR) , MUART_SR_TC_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(376): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  376 |     CLR_BIT(((UART[1]) -> SR) , MUART_SR_RXNE_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(365): warning: no previous prototype for function 'USART2_IRQHandler' [-Wmissing-prototypes]
  365 | void USART2_IRQHandler(void)
      |      ^
MCAL/UART/UART_Program.c(365): note: declare 'static' if the function is not intended to be used outside of this translation unit
  365 | void USART2_IRQHandler(void)
      | ^
      | static 
MCAL/UART/UART_Program.c(389): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  389 |     CLR_BIT(((UART[2]) -> SR) , MUART_SR_TC_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(390): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  390 |     CLR_BIT(((UART[2]) -> SR) , MUART_SR_RXNE_BIT);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                      ~~ ^~~~~~~~~~~
MCAL/UART/UART_Program.c(391): warning: no newline at end of file [-Wnewline-eof]
  391 | }
      |  ^
MCAL/UART/UART_Program.c(379): warning: no previous prototype for function 'USART3_IRQHandler' [-Wmissing-prototypes]
  379 | void USART3_IRQHandler(void)
      |      ^
MCAL/UART/UART_Program.c(379): note: declare 'static' if the function is not intended to be used outside of this translation unit
  379 | void USART3_IRQHandler(void)
      | ^
      | static 
MCAL/UART/UART_Program.c(35): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   35 |         CLR_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_M_BIT);
      |                   ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(43): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   43 |         CLR_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_PCE_BIT);
      |                   ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(54): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   54 |     ((UART[Copy_UARTChoice]) -> CR2) &= ~(((uint32) 0b11) << MUART_CR2_STOP_START_BIT);
      |       ^~~~
MCAL/UART/UART_Program.c(57): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   57 |         ((UART[Copy_UARTChoice]) -> CR2) |= (((uint32) MUART_NO_OF_STOP_BITS) << MUART_CR2_STOP_START_BIT);
      |           ^~~~
MCAL/UART/UART_Program.c(65): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   65 |         CLR_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_TCIE_BIT);
      |                   ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(71): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   71 |         SET_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_RXNEIE_BIT);
      |                   ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(89): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   89 |     ((UART[Copy_UARTChoice]) -> BRR) = (Loc_uint16Fraction << MUART_BRR_FRACTION_START_BIT) | (Loc_uint16Mantissa << MUART_BRR_MANTISSA_START_BIT);
      |       ^~~~
MCAL/UART/UART_Program.c(91): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   91 |     SET_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_TE_BIT);
      |               ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(92): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   92 |     SET_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_RE_BIT);
      |               ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(93): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   93 |     SET_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_UE_BIT);
      |               ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(14): note: expanded from macro 'SET_BIT'
   14 | #define SET_BIT(REG,BIT)                        (REG |= (1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(95): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   95 |         CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_TC_BIT);
      |                   ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(96): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   96 |     CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_RXNE_BIT);
      |               ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(114): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  114 |     while(!(GET_BIT(((UART[Copy_UARTChoice]) -> SR), MUART_SR_TXE_BIT)));
      |                       ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(17): note: expanded from macro 'GET_BIT'
   17 | #define GET_BIT(REG,BIT)                        ((REG >> BIT) & 1)
      |                                                   ^~~
MCAL/UART/UART_Program.c(117): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  117 |         (UART[Copy_UARTChoice] -> DR) = Copy_uint16TxChar & ((uint16)(0x00FF));
      |          ^~~~
MCAL/UART/UART_Program.c(125): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  125 |     while(!(GET_BIT(((UART[Copy_UARTChoice]) -> SR), MUART_SR_TC_BIT)));
      |                       ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(17): note: expanded from macro 'GET_BIT'
   17 | #define GET_BIT(REG,BIT)                        ((REG >> BIT) & 1)
      |                                                   ^~~
MCAL/UART/UART_Program.c(126): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  126 |     CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_TC_BIT);
      |               ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(145): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  145 |     while(!(GET_BIT(((UART[Copy_UARTChoice]) -> SR), MUART_SR_TXE_BIT)));
      |                       ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(17): note: expanded from macro 'GET_BIT'
   17 | #define GET_BIT(REG,BIT)                        ((REG >> BIT) & 1)
      |                                                   ^~~
MCAL/UART/UART_Program.c(148): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  148 |         (UART[Copy_UARTChoice] -> DR) = Copy_uint16TxChar & ((uint16)(0x00FF));
      |          ^~~~
MCAL/UART/UART_Program.c(173): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  173 |         while(!(GET_BIT(((UART[Copy_UARTChoice]) -> SR), MUART_SR_RXNE_BIT)));
      |                           ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(17): note: expanded from macro 'GET_BIT'
   17 | #define GET_BIT(REG,BIT)                        ((REG >> BIT) & 1)
      |                                                   ^~~
MCAL/UART/UART_Program.c(174): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  174 |         CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_RXNE_BIT);
      |                   ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(178): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  178 |                 *P_uint16RxChar = (((UART[Copy_UARTChoice]) -> DR) & (uint16)(0xFF));
      |                                      ^~~~
MCAL/UART/UART_Program.c(220): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  220 |                 *P_uint16RxChar = (((UART[Copy_UARTChoice]) -> DR) & (uint16)(0xFF));
      |                                      ^~~~
MCAL/UART/UART_Program.c(237): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  237 |         CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_RXNE_BIT);
      |                   ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(262): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  262 |         while(P_uint8TxString[Loc_uint8Index] != '\0')
      |               ^~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(264): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  264 |             MUART_TxChar(Copy_UARTChoice, P_uint8TxString[Loc_uint8Index]);
      |                                           ^~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(290): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  290 |         Glbl_PTxCompleteFunc[Copy_UARTChoice] = P_TxCompleteCallbackFunc;
      |         ^~~~~~~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(313): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  313 |         Glbl_PRxCompleteFunc[Copy_UARTChoice] = P_RxCompleteCallbackFunc;
      |         ^~~~~~~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(336): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  336 |             Loc_uint8CharArray[Loc_uint8Count] = ((Loc_uint8TempValue % 10) + 48);
      |             ^~~~~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(343): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  343 |             MUART_TxChar(Copy_UARTChoice, Loc_uint8CharArray[Loc_uint8Count - Loc_uint8Index - 1]);
      |                                           ^~~~~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(367): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  367 |         if(Glbl_PRxCompleteFunc[1] != NULL_PTR)
      |            ^~~~~~~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(369): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  369 |         (Glbl_PRxCompleteFunc[1])();
      |          ^~~~~~~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(375): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  375 |     CLR_BIT(((UART[1]) -> SR) , MUART_SR_TC_BIT);
      |               ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(376): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  376 |     CLR_BIT(((UART[1]) -> SR) , MUART_SR_RXNE_BIT);
      |               ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(381): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  381 |     if(Glbl_PRxCompleteFunc[2] != NULL_PTR)
      |        ^~~~~~~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(383): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  383 |         (Glbl_PRxCompleteFunc[2])();
      |          ^~~~~~~~~~~~~~~~~~~~
MCAL/UART/UART_Program.c(389): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  389 |     CLR_BIT(((UART[2]) -> SR) , MUART_SR_TC_BIT);
      |               ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
MCAL/UART/UART_Program.c(390): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  390 |     CLR_BIT(((UART[2]) -> SR) , MUART_SR_RXNE_BIT);
      |               ^~~~
MCAL/UART/../../LIB/BIT_MATH/BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
   15 | #define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
      |                                                  ^~~
76 warnings generated.
compiling UART_Program.c...
HAL/ESP32/ESP32_Program.c(16): warning: In file included from...
HAL/ESP32/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
HAL/ESP32/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
HAL/ESP32/ESP32_Program.c(16): warning: In file included from...
HAL/ESP32/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
HAL/ESP32/ESP32_Program.c(19): warning: In file included from...
HAL/ESP32/../../MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
HAL/ESP32/ESP32_Program.c(20): warning: In file included from...
HAL/ESP32/../../MCAL/UART/UART_Interface.h(129): warning: no newline at end of file [-Wnewline-eof]
  129 | #endif /*_UART_INTERFACE_H_*/
      |                              ^
HAL/ESP32/ESP32_Program.c(21): warning: In file included from...
HAL/ESP32/../../MCAL/NVIC/NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
  151 | #endif /*_NVIC_INTERFACE_H_*/
      |                              ^
HAL/ESP32/ESP32_Program.c(22): warning: In file included from...
HAL/ESP32/../../MCAL/RTC/RTC_Interface.h(71): warning: no newline at end of file [-Wnewline-eof]
   71 | #endif /*_RTC_INTERFACE_H_*/
      |                             ^
HAL/ESP32/ESP32_Program.c(24): warning: In file included from...
HAL/ESP32/ESP32_Interface.h(37): warning: no newline at end of file [-Wnewline-eof]
   37 | #endif /*_ESP32_INTERFACE_H_*/
      |                               ^
HAL/ESP32/ESP32_Program.c(25): warning: In file included from...
HAL/ESP32/ESP32_Private.h(22): warning: no newline at end of file [-Wnewline-eof]
   22 | #endif /*_ESP32_PRIVATE_H_*/
      |                             ^
HAL/ESP32/ESP32_Program.c(26): warning: In file included from...
HAL/ESP32/ESP32_Config.h(53): warning: no newline at end of file [-Wnewline-eof]
   53 | #endif /*_ESP32_CONFIG_H_*/
      |                            ^
HAL/ESP32/ESP32_Program.c(57): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   57 |                         Loc_uint8Compare = strncmp((HESP32_AvailableTasks[Loc_uint8Index]), glbl_uint8CommandBuffer, strlen((HESP32_AvailableTasks[Loc_uint8Index])));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\string.h(335): note: passing argument to parameter here
  335 | extern _ARMABI size_t strlen(const char * /*s*/) __attribute__((__nonnull__(1)));
      |                                                ^
HAL/ESP32/ESP32_Program.c(57): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   57 |                         Loc_uint8Compare = strncmp((HESP32_AvailableTasks[Loc_uint8Index]), glbl_uint8CommandBuffer, strlen((HESP32_AvailableTasks[Loc_uint8Index])));
      |                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\string.h(132): note: passing argument to parameter here
  132 | extern _ARMABI int strncmp(const char * /*s1*/, const char * /*s2*/, size_t /*n*/) __attribute__((__nonnull__(1,2)));
      |                                               ^
HAL/ESP32/ESP32_Program.c(57): warning: passing 'volatile uint8[50]' (aka 'volatile unsigned char[50]') to parameter of type 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   57 |                         Loc_uint8Compare = strncmp((HESP32_AvailableTasks[Loc_uint8Index]), glbl_uint8CommandBuffer, strlen((HESP32_AvailableTasks[Loc_uint8Index])));
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\string.h(132): note: passing argument to parameter here
  132 | extern _ARMABI int strncmp(const char * /*s1*/, const char * /*s2*/, size_t /*n*/) __attribute__((__nonnull__(1,2)));
      |                                                                    ^
HAL/ESP32/ESP32_Program.c(57): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
   57 |                         Loc_uint8Compare = strncmp((HESP32_AvailableTasks[Loc_uint8Index]), glbl_uint8CommandBuffer, strlen((HESP32_AvailableTasks[Loc_uint8Index])));
      |                                          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(80): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   80 |                                 (glbl_PArgCallbackFunc[Loc_uint8Index - HESP32_NO_OF_NON_ARG_COMMANDS])((glbl_uint8CommandBuffer + strlen((HESP32_AvailableTasks[Loc_uint8Index])) + 1));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\string.h(335): note: passing argument to parameter here
  335 | extern _ARMABI size_t strlen(const char * /*s*/) __attribute__((__nonnull__(1)));
      |                                                ^
HAL/ESP32/ESP32_Program.c(80): warning: passing 'volatile uint8 *' (aka 'volatile unsigned char *') to parameter of type 'uint8 *' (aka 'unsigned char *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
   80 |                                 (glbl_PArgCallbackFunc[Loc_uint8Index - HESP32_NO_OF_NON_ARG_COMMANDS])((glbl_uint8CommandBuffer + strlen((HESP32_AvailableTasks[Loc_uint8Index])) + 1));
      |                                                                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(51): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
   51 |             uint8 Loc_uint8Index = 0; 
      |                   ^
HAL/ESP32/ESP32_Program.c(167): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  167 |         MGPIO_SetPinMode(MUART3_TX_PORT_ID, MUART3_TX_PIN_ID, MGPIO_OUTPUT_AF_PUSH_PULL_2MHZ);
      |                                                               ^
HAL/ESP32/../../MCAL/GPIO/GPIO_Interface.h(57): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_2MHZ'
   57 | #define MGPIO_OUTPUT_AF_PUSH_PULL_2MHZ              (uint32)0b1010     /* GPIO Output Alternate Function Push-Pull Mode, 2MHz */
      |                                                             ^
HAL/ESP32/ESP32_Program.c(168): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  168 |         MGPIO_SetPinMode(MUART3_RX_PORT_ID, MUART3_RX_PIN_ID, MGPIO_INPUT_PULL_UP_OR_DOWN_MODE);
      |                                                               ^
HAL/ESP32/../../MCAL/GPIO/GPIO_Interface.h(47): note: expanded from macro 'MGPIO_INPUT_PULL_UP_OR_DOWN_MODE'
   47 | #define MGPIO_INPUT_PULL_UP_OR_DOWN_MODE            (uint32)0b1000     /* GPIO Input Pull down Mode */
      |                                                             ^
HAL/ESP32/ESP32_Program.c(301): warning: passing 'uint8[14]' (aka 'unsigned char[14]') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  301 |         snprintf(Loc_uint8IntensityBuffer, sizeof(Loc_uint8IntensityBuffer), "%f", *P_float32RefIntensity);
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(440): note: passing argument to parameter here
  440 | extern _ARMABI int snprintf(char * __restrict /*s*/, size_t /*n*/,
      |                                                    ^
HAL/ESP32/ESP32_Program.c(301): warning: implicit conversion increases floating-point precision: 'float32' (aka 'float') to 'double' [-Wdouble-promotion]
  301 |         snprintf(Loc_uint8IntensityBuffer, sizeof(Loc_uint8IntensityBuffer), "%f", *P_float32RefIntensity);
      |         ~~~~~~~~                                                                   ^~~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(304): warning: passing 'uint8[14]' (aka 'unsigned char[14]') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  304 |         snprintf(Loc_uint8IntensityBuffer, sizeof(Loc_uint8IntensityBuffer), "%f", *P_float32SampleIntensity);
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(440): note: passing argument to parameter here
  440 | extern _ARMABI int snprintf(char * __restrict /*s*/, size_t /*n*/,
      |                                                    ^
HAL/ESP32/ESP32_Program.c(304): warning: implicit conversion increases floating-point precision: 'float32' (aka 'float') to 'double' [-Wdouble-promotion]
  304 |         snprintf(Loc_uint8IntensityBuffer, sizeof(Loc_uint8IntensityBuffer), "%f", *P_float32SampleIntensity);
      |         ~~~~~~~~                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(359): warning: no newline at end of file [-Wnewline-eof]
  359 |                         //}
      |                            ^
HAL/ESP32/ESP32_Program.c(49): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   49 |             glbl_uint8CommandBuffer[glbl_uint8BufferIndex] = '\0';
      |             ^~~~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(57): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   57 |                         Loc_uint8Compare = strncmp((HESP32_AvailableTasks[Loc_uint8Index]), glbl_uint8CommandBuffer, strlen((HESP32_AvailableTasks[Loc_uint8Index])));
      |                                                     ^~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(57): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   57 |                         Loc_uint8Compare = strncmp((HESP32_AvailableTasks[Loc_uint8Index]), glbl_uint8CommandBuffer, strlen((HESP32_AvailableTasks[Loc_uint8Index])));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(65): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   65 |                         if((glbl_PCallbackFunc[Loc_uint8Index]) != NULL_PTR)
      |                             ^~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(67): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   67 |                             (glbl_PCallbackFunc[Loc_uint8Index])();
      |                              ^~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(78): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   78 |                             if((glbl_PArgCallbackFunc[Loc_uint8Index - HESP32_NO_OF_NON_ARG_COMMANDS]) != NULL_PTR)
      |                                 ^~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(80): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   80 |                                 (glbl_PArgCallbackFunc[Loc_uint8Index - HESP32_NO_OF_NON_ARG_COMMANDS])((glbl_uint8CommandBuffer + strlen((HESP32_AvailableTasks[Loc_uint8Index])) + 1));
      |                                  ^~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(80): warning: unsafe pointer arithmetic [-Wunsafe-buffer-usage]
   80 |                                 (glbl_PArgCallbackFunc[Loc_uint8Index - HESP32_NO_OF_NON_ARG_COMMANDS])((glbl_uint8CommandBuffer + strlen((HESP32_AvailableTasks[Loc_uint8Index])) + 1));
      |                                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(80): warning: unsafe pointer arithmetic [-Wunsafe-buffer-usage]
   80 |                                 (glbl_PArgCallbackFunc[Loc_uint8Index - HESP32_NO_OF_NON_ARG_COMMANDS])((glbl_uint8CommandBuffer + strlen((HESP32_AvailableTasks[Loc_uint8Index])) + 1));
      |                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(80): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   80 |                                 (glbl_PArgCallbackFunc[Loc_uint8Index - HESP32_NO_OF_NON_ARG_COMMANDS])((glbl_uint8CommandBuffer + strlen((HESP32_AvailableTasks[Loc_uint8Index])) + 1));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(104): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  104 |             glbl_uint8CommandBuffer[glbl_uint8BufferIndex] = (uint8)(Loc_uint16RxChar);
      |             ^~~~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(206): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  206 |         glbl_PCallbackFunc[Copy_uint8CommandNumber] = P_CommandCallbackFunc;
      |         ^~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(224): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  224 |             glbl_PArgCallbackFunc[Copy_uint8CommandNumber - HESP32_NO_OF_NON_ARG_COMMANDS] = P_CommandCallbackFunc;
      |             ^~~~~~~~~~~~~~~~~~~~~
HAL/ESP32/ESP32_Program.c(245): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  245 |             MUART_SendIntegerValue(HESP32_UART_CHOICE, P_uint32MotorSteps[Loc_uint8Index]);
      |                                                        ^~~~~~~~~~~~~~~~~~
37 warnings generated.
compiling ESP32_Program.c...
HAL/SPWRVolt/SPWRVolt_Program.c(10): warning: In file included from...
HAL/SPWRVolt/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
HAL/SPWRVolt/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
HAL/SPWRVolt/SPWRVolt_Program.c(10): warning: In file included from...
HAL/SPWRVolt/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
HAL/SPWRVolt/SPWRVolt_Program.c(12): warning: In file included from...
HAL/SPWRVolt/../../MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
HAL/SPWRVolt/SPWRVolt_Program.c(13): warning: In file included from...
HAL/SPWRVolt/../../MCAL/GPTMR/GPTMR_Interface.h(75): warning: no newline at end of file [-Wnewline-eof]
   75 | #endif /*_GPTMR_INTERFACE_H_*/
      |                               ^
HAL/SPWRVolt/SPWRVolt_Program.c(14): warning: In file included from...
HAL/SPWRVolt/../../MCAL/ADC/ADC_Interface.h(63): warning: redefinition of typedef 'ptr_to_func_t' is a C11 feature [-Wtypedef-redefinition]
   63 | typedef void(*ptr_to_func_t)(void);
      |               ^
HAL/SPWRVolt/../../MCAL/GPTMR/GPTMR_Interface.h(21): note: previous definition is here
   21 | typedef void(*ptr_to_func_t)(void);
      |               ^
HAL/SPWRVolt/SPWRVolt_Program.c(14): warning: In file included from...
HAL/SPWRVolt/../../MCAL/ADC/ADC_Interface.h(70): warning: no newline at end of file [-Wnewline-eof]
   70 | #endif /*_ADC_INTERFACE_H_*/
      |                             ^
HAL/SPWRVolt/SPWRVolt_Program.c(16): warning: In file included from...
HAL/SPWRVolt/../../MCAL/NVIC/NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
  151 | #endif /*_NVIC_INTERFACE_H_*/
      |                              ^
HAL/SPWRVolt/SPWRVolt_Program.c(18): warning: In file included from...
HAL/SPWRVolt/SPWRVolt_Interface.h(38): warning: no newline at end of file [-Wnewline-eof]
   38 | #endif /*_SPWRVOLT_INTERFACE_H_*/
      |                                  ^
HAL/SPWRVolt/SPWRVolt_Program.c(19): warning: In file included from...
HAL/SPWRVolt/SPWRVolt_Config.h(44): warning: no newline at end of file [-Wnewline-eof]
   44 | #endif /*_SPWRVOLT_CONFIG_H_*/
      |                               ^
HAL/SPWRVolt/SPWRVolt_Program.c(25): warning: no previous prototype for function 'SPWRVolt_StartConversion' [-Wmissing-prototypes]
   25 | void SPWRVolt_StartConversion       (void)
      |      ^
HAL/SPWRVolt/SPWRVolt_Program.c(25): note: declare 'static' if the function is not intended to be used outside of this translation unit
   25 | void SPWRVolt_StartConversion       (void)
      | ^
      | static 
HAL/SPWRVolt/SPWRVolt_Program.c(29): warning: no previous prototype for function 'SPWRVolt_GetConversionValue' [-Wmissing-prototypes]
   29 | void SPWRVolt_GetConversionValue    (void)
      |      ^
HAL/SPWRVolt/SPWRVolt_Program.c(29): note: declare 'static' if the function is not intended to be used outside of this translation unit
   29 | void SPWRVolt_GetConversionValue    (void)
      | ^
      | static 
HAL/SPWRVolt/SPWRVolt_Program.c(43): warning: no previous prototype for function 'SPWRVolt_StartSequence' [-Wmissing-prototypes]
   43 | void SPWRVolt_StartSequence         (void)
      |      ^
HAL/SPWRVolt/SPWRVolt_Program.c(43): note: declare 'static' if the function is not intended to be used outside of this translation unit
   43 | void SPWRVolt_StartSequence         (void)
      | ^
      | static 
HAL/SPWRVolt/SPWRVolt_Program.c(64): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   64 |         MGPIO_SetPinMode(SPWRVolt_VoltagesPortIDs[Loc_uint8Index], SPWRVolt_VoltagesPinIDs[Loc_uint8Index], MGPIO_INPUT_ANALOG_MODE);
      |                                                                                                             ^
HAL/SPWRVolt/../../MCAL/GPIO/GPIO_Interface.h(45): note: expanded from macro 'MGPIO_INPUT_ANALOG_MODE'
   45 | #define MGPIO_INPUT_ANALOG_MODE                     (uint32)0b0000     /* GPIO Input Analog Mode */
      |                                                             ^
HAL/SPWRVolt/SPWRVolt_Program.c(61): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
   61 |                 uint8 Loc_uint8Index = 0;
      |                       ^
HAL/SPWRVolt/SPWRVolt_Program.c(27): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   27 |     MADC_StartConversion(MADC1, SPWRVolt_VoltageChannels[glbl_uint8VoltageIndex]);
      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~
HAL/SPWRVolt/SPWRVolt_Program.c(34): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   34 |     glbl_uint16VoltageValues[glbl_uint8VoltageIndex] = Loc_uint16VoltageValue;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~
HAL/SPWRVolt/SPWRVolt_Program.c(64): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   64 |         MGPIO_SetPinMode(SPWRVolt_VoltagesPortIDs[Loc_uint8Index], SPWRVolt_VoltagesPinIDs[Loc_uint8Index], MGPIO_INPUT_ANALOG_MODE);
      |                          ^~~~~~~~~~~~~~~~~~~~~~~~
HAL/SPWRVolt/SPWRVolt_Program.c(64): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   64 |         MGPIO_SetPinMode(SPWRVolt_VoltagesPortIDs[Loc_uint8Index], SPWRVolt_VoltagesPinIDs[Loc_uint8Index], MGPIO_INPUT_ANALOG_MODE);
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~
HAL/SPWRVolt/SPWRVolt_Program.c(101): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  101 |         *P_uint16VoltageValue = glbl_uint16VoltageValues[Copy_uint32VoltageChoice];
      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~
19 warnings generated.
compiling SPWRVolt_Program.c...
HAL/STEPPER_MOTOR/MOTORS_Program.c(10): warning: In file included from...
HAL/STEPPER_MOTOR/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
HAL/STEPPER_MOTOR/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(10): warning: In file included from...
HAL/STEPPER_MOTOR/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(12): warning: In file included from...
HAL/STEPPER_MOTOR/../../MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(14): warning: In file included from...
HAL/STEPPER_MOTOR/../../MCAL/STK/STK_Interface.h(69): warning: no newline at end of file [-Wnewline-eof]
   69 | #endif /*_STK_INTERFACE_H_*/
      |                             ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(15): warning: In file included from...
HAL/STEPPER_MOTOR/../../MCAL/EXTI/EXTI_Interface.h(44): warning: no newline at end of file [-Wnewline-eof]
   44 | #endif /*_EXTI_INTERFACE_H_*/
      |                              ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(16): warning: In file included from...
HAL/STEPPER_MOTOR/../../MCAL/NVIC/NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
  151 | #endif /*_NVIC_INTERFACE_H_*/
      |                              ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(17): warning: In file included from...
HAL/STEPPER_MOTOR/../../MCAL/AFIO/AFIO_Interface.h(39): warning: no newline at end of file [-Wnewline-eof]
   39 | #endif /*_AFIO_INTERFACE_H_*/
      |                              ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(19): warning: In file included from...
HAL/STEPPER_MOTOR/MOTORS_Config.h(48): warning: no newline at end of file [-Wnewline-eof]
   48 | #endif /*_MOTORS_CONFIG_H_*/
      |                             ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(20): warning: In file included from...
HAL/STEPPER_MOTOR/MOTORS_Private.h(55): warning: no newline at end of file [-Wnewline-eof]
   55 | #endif /*_MOTORS_PRIVATE_H_*/
      |                              ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(21): warning: In file included from...
HAL/STEPPER_MOTOR/MOTORS_Interface.h(31): warning: no newline at end of file [-Wnewline-eof]
   31 | #endif /*_MOTORS_INTERFACE_H_*/
      |                                ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(33): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   33 |         MAFIO_MAPR_R &= ~((0b111) << 24);
      |                            ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(33): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
   33 |         MAFIO_MAPR_R &= ~((0b111) << 24);
      |                      ~~ ^~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(34): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   34 |         MAFIO_MAPR_R |= ((0b010) << 24);
      |                           ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(41): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   41 |                                                         glbl_uint8MotorHomingPinIDs[Loc_uint8Index], MGPIO_INPUT_PULL_UP_OR_DOWN_MODE);
      |                                                                                                      ^
HAL/STEPPER_MOTOR/../../MCAL/GPIO/GPIO_Interface.h(47): note: expanded from macro 'MGPIO_INPUT_PULL_UP_OR_DOWN_MODE'
   47 | #define MGPIO_INPUT_PULL_UP_OR_DOWN_MODE            (uint32)0b1000     /* GPIO Input Pull down Mode */
      |                                                             ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(48): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   48 |                                                         glbl_uint8MotorsStepPinIDs[Loc_uint8Index], MGPIO_OUTPUT_PUSH_PULL_2MHZ);
      |                                                                                                     ^
HAL/STEPPER_MOTOR/../../MCAL/GPIO/GPIO_Interface.h(55): note: expanded from macro 'MGPIO_OUTPUT_PUSH_PULL_2MHZ'
   55 | #define MGPIO_OUTPUT_PUSH_PULL_2MHZ                 (uint32)0b0010     /* GPIO Output Push-Pull Mode, 2MHz */
      |                                                             ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(50): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   50 |                                                         glbl_uint8MotorsDirPinIDs[Loc_uint8Index], MGPIO_OUTPUT_PUSH_PULL_2MHZ);
      |                                                                                                    ^
HAL/STEPPER_MOTOR/../../MCAL/GPIO/GPIO_Interface.h(55): note: expanded from macro 'MGPIO_OUTPUT_PUSH_PULL_2MHZ'
   55 | #define MGPIO_OUTPUT_PUSH_PULL_2MHZ                 (uint32)0b0010     /* GPIO Output Push-Pull Mode, 2MHz */
      |                                                             ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(36): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
   36 |         uint8 Loc_uint8Index = 0;
      |               ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(73): warning: backslash and newline separated by space [-Wbackslash-newline-escape]
   73 |                         MGPIO_SetPinValue(glbl_uint8MotorsDirPortIDs[Copy_uint32MotorSelect],\ 
      |                                                                                               ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(79): warning: backslash and newline separated by space [-Wbackslash-newline-escape]
   79 |                         MGPIO_SetPinValue(glbl_uint8MotorsDirPortIDs[Copy_uint32MotorSelect],\ 
      |                                                                                               ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(86): warning: backslash and newline separated by space [-Wbackslash-newline-escape]
   86 |                 MGPIO_SetPinValue(glbl_uint8MotorsStepPortIDs[Copy_uint32MotorSelect],\ 
      |                                                                                        ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(91): warning: backslash and newline separated by space [-Wbackslash-newline-escape]
   91 |                 MGPIO_SetPinValue(glbl_uint8MotorsStepPortIDs[Copy_uint32MotorSelect],\ 
      |                                                                                        ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(128): warning: no newline at end of file [-Wnewline-eof]
  128 | }
      |  ^
HAL/STEPPER_MOTOR/MOTORS_Program.c(40): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   40 |                 MGPIO_SetPinMode(glbl_uint8MotorHomingPortIDs[Loc_uint8Index],\
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(41): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   41 |                                                         glbl_uint8MotorHomingPinIDs[Loc_uint8Index], MGPIO_INPUT_PULL_UP_OR_DOWN_MODE);
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(42): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   42 |                 MGPIO_ActivatePullUp(glbl_uint8MotorHomingPortIDs[Loc_uint8Index],\
      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(43): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   43 |                                                                 glbl_uint8MotorHomingPinIDs[Loc_uint8Index]);
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(47): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   47 |                 MGPIO_SetPinMode(glbl_uint8MotorsStepPortIDs[Loc_uint8Index],\
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(48): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   48 |                                                         glbl_uint8MotorsStepPinIDs[Loc_uint8Index], MGPIO_OUTPUT_PUSH_PULL_2MHZ);
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(49): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   49 |         MGPIO_SetPinMode(glbl_uint8MotorsDirPortIDs[Loc_uint8Index],\
      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(50): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   50 |                                                         glbl_uint8MotorsDirPinIDs[Loc_uint8Index], MGPIO_OUTPUT_PUSH_PULL_2MHZ);
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(73): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   73 |                         MGPIO_SetPinValue(glbl_uint8MotorsDirPortIDs[Copy_uint32MotorSelect],\ 
      |                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(74): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   74 |                                                                 glbl_uint8MotorsDirPinIDs[Copy_uint32MotorSelect], MGPIO_LOW);
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(79): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   79 |                         MGPIO_SetPinValue(glbl_uint8MotorsDirPortIDs[Copy_uint32MotorSelect],\ 
      |                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(80): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   80 |                                                                 glbl_uint8MotorsDirPinIDs[Copy_uint32MotorSelect], MGPIO_HIGH);
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(86): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   86 |                 MGPIO_SetPinValue(glbl_uint8MotorsStepPortIDs[Copy_uint32MotorSelect],\ 
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(87): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   87 |                                                                 glbl_uint8MotorsStepPinIDs[Copy_uint32MotorSelect], MGPIO_HIGH);
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(91): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   91 |                 MGPIO_SetPinValue(glbl_uint8MotorsStepPortIDs[Copy_uint32MotorSelect],\ 
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(92): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   92 |                                                                 glbl_uint8MotorsStepPinIDs[Copy_uint32MotorSelect], MGPIO_LOW);
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(102): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  102 |                 glbl_uint8HomingIndicator[(Copy_uint32MotorSelect - 1)] = HMOTORS_MOTOR_NOT_AT_HOME;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(104): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  104 |                 while((glbl_uint8HomingIndicator[(Copy_uint32MotorSelect - 1)]) == HMOTORS_MOTOR_NOT_AT_HOME)
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(109): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  109 |                 glbl_uint8HomingIndicator[(Copy_uint32MotorSelect - 1)] = HMOTORS_MOTOR_NOT_AT_HOME;
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(123): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  123 |         glbl_uint8HomingIndicator[1] = HMOTORS_MOTOR_AT_HOME;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
HAL/STEPPER_MOTOR/MOTORS_Program.c(127): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  127 |         glbl_uint8HomingIndicator[2] = HMOTORS_MOTOR_AT_HOME;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
43 warnings generated.
compiling MOTORS_Program.c...
main.c(2): warning: In file included from...
./RTE/_Target_1\../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
./RTE/_Target_1\../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
main.c(2): warning: In file included from...
./RTE/_Target_1\../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
main.c(5): warning: In file included from...
./RTE/_Target_1\../../MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
main.c(6): warning: In file included from...
./RTE/_Target_1\../../MCAL/NVIC/NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
  151 | #endif /*_NVIC_INTERFACE_H_*/
      |                              ^
main.c(7): warning: In file included from...
./RTE/_Target_1\../../MCAL/UART/UART_Interface.h(129): warning: no newline at end of file [-Wnewline-eof]
  129 | #endif /*_UART_INTERFACE_H_*/
      |                              ^
main.c(8): warning: In file included from...
./RTE/_Target_1\../../MCAL/STK/STK_Interface.h(69): warning: no newline at end of file [-Wnewline-eof]
   69 | #endif /*_STK_INTERFACE_H_*/
      |                             ^
main.c(10): warning: In file included from...
./RTE/_Target_1\../../MCAL/RTC/RTC_Interface.h(71): warning: no newline at end of file [-Wnewline-eof]
   71 | #endif /*_RTC_INTERFACE_H_*/
      |                             ^
main.c(11): warning: In file included from...
./RTE/_Target_1\../../HAL/ESP32/ESP32_Interface.h(37): warning: no newline at end of file [-Wnewline-eof]
   37 | #endif /*_ESP32_INTERFACE_H_*/
      |                               ^
main.c(12): warning: In file included from...
./RTE/_Target_1\../../APP/SCommands/SCommands_Interface.h(15): warning: no newline at end of file [-Wnewline-eof]
   15 | #endif /*_SCOMMANDS_INTERFACE_H_*/
      |                                   ^
9 warnings generated.
compiling main.c...
APP/SCommands/SCommands_Program.c(16): warning: In file included from...
APP/SCommands/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
APP/SCommands/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
APP/SCommands/SCommands_Program.c(16): warning: In file included from...
APP/SCommands/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
APP/SCommands/SCommands_Program.c(18): warning: In file included from...
APP/SCommands/../../MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
APP/SCommands/SCommands_Program.c(19): warning: In file included from...
APP/SCommands/../../MCAL/RTC/RTC_Interface.h(71): warning: no newline at end of file [-Wnewline-eof]
   71 | #endif /*_RTC_INTERFACE_H_*/
      |                             ^
APP/SCommands/SCommands_Program.c(20): warning: In file included from...
APP/SCommands/../../MCAL/UART/UART_Interface.h(129): warning: no newline at end of file [-Wnewline-eof]
  129 | #endif /*_UART_INTERFACE_H_*/
      |                              ^
APP/SCommands/SCommands_Program.c(21): warning: In file included from...
APP/SCommands/../../MCAL/STK/STK_Interface.h(69): warning: no newline at end of file [-Wnewline-eof]
   69 | #endif /*_STK_INTERFACE_H_*/
      |                             ^
APP/SCommands/SCommands_Program.c(22): warning: In file included from...
APP/SCommands/../../MCAL/NVIC/NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
  151 | #endif /*_NVIC_INTERFACE_H_*/
      |                              ^
APP/SCommands/SCommands_Program.c(23): warning: In file included from...
APP/SCommands/../../MCAL/SCB/SCB_Interface.h(141): warning: no newline at end of file [-Wnewline-eof]
  141 | #endif /*_SCB_INTERFACE_H_*/
      |                             ^
APP/SCommands/SCommands_Program.c(26): warning: In file included from...
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(37): warning: no newline at end of file [-Wnewline-eof]
   37 | #endif /*_ESP32_INTERFACE_H_*/
      |                               ^
APP/SCommands/SCommands_Program.c(27): warning: In file included from...
APP/SCommands/../../HAL/SPWRVolt/SPWRVolt_Interface.h(38): warning: no newline at end of file [-Wnewline-eof]
   38 | #endif /*_SPWRVOLT_INTERFACE_H_*/
      |                                  ^
APP/SCommands/SCommands_Program.c(28): warning: In file included from...
APP/SCommands/../../HAL/STEPPER_MOTOR/MOTORS_Interface.h(31): warning: no newline at end of file [-Wnewline-eof]
   31 | #endif /*_MOTORS_INTERFACE_H_*/
      |                                ^
APP/SCommands/SCommands_Program.c(30): warning: In file included from...
APP/SCommands/SCommands_Config.h(21): warning: no newline at end of file [-Wnewline-eof]
   21 | #endif /*_SCOMMANDS_CONFIG_H_*/
      |                                ^
APP/SCommands/SCommands_Program.c(31): warning: In file included from...
APP/SCommands/SCommands_Interface.h(15): warning: no newline at end of file [-Wnewline-eof]
   15 | #endif /*_SCOMMANDS_INTERFACE_H_*/
      |                                   ^
APP/SCommands/SCommands_Program.c(78): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   78 |     MGPIO_SetPinMode                        (SPECTRO_VIS_POWER_CONTROL_PORT_ID, SPECTRO_VIS_POWER_CONTROL_PIN_ID, MGPIO_OUTPUT_PUSH_PULL_2MHZ);
      |                                                                                                                   ^
APP/SCommands/../../MCAL/GPIO/GPIO_Interface.h(55): note: expanded from macro 'MGPIO_OUTPUT_PUSH_PULL_2MHZ'
   55 | #define MGPIO_OUTPUT_PUSH_PULL_2MHZ                 (uint32)0b0010     /* GPIO Output Push-Pull Mode, 2MHz */
      |                                                             ^
APP/SCommands/SCommands_Program.c(79): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   79 |     MGPIO_SetPinMode                        (SPECTRO_UV_POWER_CONTROL_PORT_ID, SPECTRO_UV_POWER_CONTROL_PIN_ID, MGPIO_OUTPUT_PUSH_PULL_2MHZ);
      |                                                                                                                 ^
APP/SCommands/../../MCAL/GPIO/GPIO_Interface.h(55): note: expanded from macro 'MGPIO_OUTPUT_PUSH_PULL_2MHZ'
   55 | #define MGPIO_OUTPUT_PUSH_PULL_2MHZ                 (uint32)0b0010     /* GPIO Output Push-Pull Mode, 2MHz */
      |                                                             ^
APP/SCommands/SCommands_Program.c(119): warning: passing 'char[3]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  119 |         HESP32_SendCommand("on");
      |                            ^~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(123): warning: passing 'char[4]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  123 |         HESP32_SendCommand("off");
      |                            ^~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(133): warning: passing 'char[3]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  133 |     HESP32_SendCommand("on");
      |                        ^~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(138): warning: passing 'char[4]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  138 |     HESP32_SendCommand("off");
      |                        ^~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(146): warning: passing 'char[3]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  146 |         HESP32_SendCommand("on");
      |                            ^~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(150): warning: passing 'char[4]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  150 |         HESP32_SendCommand("off");
      |                            ^~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(160): warning: passing 'char[3]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  160 |     HESP32_SendCommand("on");
      |                        ^~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(165): warning: passing 'char[4]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  165 |     HESP32_SendCommand("off");
      |                        ^~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(177): warning: passing 'volatile uint8 *' (aka 'volatile unsigned char *') to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  177 |     snprintf((glbl_uint8VoltageBuffer + 1), (sizeof(glbl_uint8VoltageBuffer) - 1), "%f", Loc_float32VoltageValue);
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(440): note: passing argument to parameter here
  440 | extern _ARMABI int snprintf(char * __restrict /*s*/, size_t /*n*/,
      |                                                    ^
APP/SCommands/SCommands_Program.c(177): warning: implicit conversion increases floating-point precision: 'float32' (aka 'float') to 'double' [-Wdouble-promotion]
  177 |     snprintf((glbl_uint8VoltageBuffer + 1), (sizeof(glbl_uint8VoltageBuffer) - 1), "%f", Loc_float32VoltageValue);
      |     ~~~~~~~~                                                                             ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(180): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'uint8 *' (aka 'unsigned char *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  180 |     HESP32_SendCommand(glbl_uint8VoltageBuffer);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(198): warning: passing 'volatile uint8 *' (aka 'volatile unsigned char *') to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  198 |     snprintf((glbl_uint8VoltageBuffer + 1), (sizeof(glbl_uint8VoltageBuffer) - 1), "%f", Loc_float32FinalVoltageValue);
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(440): note: passing argument to parameter here
  440 | extern _ARMABI int snprintf(char * __restrict /*s*/, size_t /*n*/,
      |                                                    ^
APP/SCommands/SCommands_Program.c(198): warning: implicit conversion increases floating-point precision: 'float32' (aka 'float') to 'double' [-Wdouble-promotion]
  198 |     snprintf((glbl_uint8VoltageBuffer + 1), (sizeof(glbl_uint8VoltageBuffer) - 1), "%f", Loc_float32FinalVoltageValue);
      |     ~~~~~~~~                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(201): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'uint8 *' (aka 'unsigned char *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  201 |     HESP32_SendCommand(glbl_uint8VoltageBuffer);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(212): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  212 |     snprintf(glbl_uint8VoltageBuffer, sizeof(glbl_uint8VoltageBuffer), "%f", Loc_float32VoltageValue);
      |              ^~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(440): note: passing argument to parameter here
  440 | extern _ARMABI int snprintf(char * __restrict /*s*/, size_t /*n*/,
      |                                                    ^
APP/SCommands/SCommands_Program.c(212): warning: implicit conversion increases floating-point precision: 'float32' (aka 'float') to 'double' [-Wdouble-promotion]
  212 |     snprintf(glbl_uint8VoltageBuffer, sizeof(glbl_uint8VoltageBuffer), "%f", Loc_float32VoltageValue);
      |     ~~~~~~~~                                                                 ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(214): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'uint8 *' (aka 'unsigned char *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  214 |     HESP32_SendCommand(glbl_uint8VoltageBuffer);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(225): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  225 |     snprintf(glbl_uint8VoltageBuffer, sizeof(glbl_uint8VoltageBuffer), "%f", Loc_float32VoltageValue);
      |              ^~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(440): note: passing argument to parameter here
  440 | extern _ARMABI int snprintf(char * __restrict /*s*/, size_t /*n*/,
      |                                                    ^
APP/SCommands/SCommands_Program.c(225): warning: implicit conversion increases floating-point precision: 'float32' (aka 'float') to 'double' [-Wdouble-promotion]
  225 |     snprintf(glbl_uint8VoltageBuffer, sizeof(glbl_uint8VoltageBuffer), "%f", Loc_float32VoltageValue);
      |     ~~~~~~~~                                                                 ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(227): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'uint8 *' (aka 'unsigned char *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  227 |     HESP32_SendCommand(glbl_uint8VoltageBuffer);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(239): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  239 |     snprintf(glbl_uint8VoltageBuffer, sizeof(glbl_uint8VoltageBuffer), "%f", Loc_float32VoltageValue);
      |              ^~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(440): note: passing argument to parameter here
  440 | extern _ARMABI int snprintf(char * __restrict /*s*/, size_t /*n*/,
      |                                                    ^
APP/SCommands/SCommands_Program.c(239): warning: implicit conversion increases floating-point precision: 'float32' (aka 'float') to 'double' [-Wdouble-promotion]
  239 |     snprintf(glbl_uint8VoltageBuffer, sizeof(glbl_uint8VoltageBuffer), "%f", Loc_float32VoltageValue);
      |     ~~~~~~~~                                                                 ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(241): warning: passing 'volatile uint8[20]' (aka 'volatile unsigned char[20]') to parameter of type 'uint8 *' (aka 'unsigned char *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  241 |     HESP32_SendCommand(glbl_uint8VoltageBuffer);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(245): warning: passing 'volatile uint32[3]' (aka 'volatile unsigned long[3]') to parameter of type 'uint32 *' (aka 'unsigned long *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  245 |     HESP32_SendMotorStatus(glbl_uint8MotorSteps, &glbl_uint8CurrentWL, 3);
      |                            ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(34): note: passing argument to parameter 'P_uint32MotorSteps' here
   34 | Std_ReturnType HESP32_SendMotorStatus               (uint32* P_uint32MotorSteps, uint32* P_uint32CurrentWL, uint8 Copy_uint8MotorNum);
      |                                                              ^
APP/SCommands/SCommands_Program.c(245): warning: passing 'volatile uint32 *' (aka 'volatile unsigned long *') to parameter of type 'uint32 *' (aka 'unsigned long *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  245 |     HESP32_SendMotorStatus(glbl_uint8MotorSteps, &glbl_uint8CurrentWL, 3);
      |                                                  ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(34): note: passing argument to parameter 'P_uint32CurrentWL' here
   34 | Std_ReturnType HESP32_SendMotorStatus               (uint32* P_uint32MotorSteps, uint32* P_uint32CurrentWL, uint8 Copy_uint8MotorNum);
      |                                                                                          ^
APP/SCommands/SCommands_Program.c(251): warning: passing 'volatile uint32 *' (aka 'volatile unsigned long *') to parameter of type 'uint32 *' (aka 'unsigned long *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  251 |     HESP32_SendMotorStatus(&glbl_uint8MotorSteps[0], &glbl_uint8CurrentWL, 1);
      |                            ^~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(34): note: passing argument to parameter 'P_uint32MotorSteps' here
   34 | Std_ReturnType HESP32_SendMotorStatus               (uint32* P_uint32MotorSteps, uint32* P_uint32CurrentWL, uint8 Copy_uint8MotorNum);
      |                                                              ^
APP/SCommands/SCommands_Program.c(251): warning: passing 'volatile uint32 *' (aka 'volatile unsigned long *') to parameter of type 'uint32 *' (aka 'unsigned long *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  251 |     HESP32_SendMotorStatus(&glbl_uint8MotorSteps[0], &glbl_uint8CurrentWL, 1);
      |                                                      ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(34): note: passing argument to parameter 'P_uint32CurrentWL' here
   34 | Std_ReturnType HESP32_SendMotorStatus               (uint32* P_uint32MotorSteps, uint32* P_uint32CurrentWL, uint8 Copy_uint8MotorNum);
      |                                                                                          ^
APP/SCommands/SCommands_Program.c(257): warning: passing 'volatile uint32 *' (aka 'volatile unsigned long *') to parameter of type 'uint32 *' (aka 'unsigned long *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  257 |     HESP32_SendMotorStatus(&glbl_uint8MotorSteps[2], &glbl_uint8CurrentWL, 1);
      |                            ^~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(34): note: passing argument to parameter 'P_uint32MotorSteps' here
   34 | Std_ReturnType HESP32_SendMotorStatus               (uint32* P_uint32MotorSteps, uint32* P_uint32CurrentWL, uint8 Copy_uint8MotorNum);
      |                                                              ^
APP/SCommands/SCommands_Program.c(257): warning: passing 'volatile uint32 *' (aka 'volatile unsigned long *') to parameter of type 'uint32 *' (aka 'unsigned long *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  257 |     HESP32_SendMotorStatus(&glbl_uint8MotorSteps[2], &glbl_uint8CurrentWL, 1);
      |                                                      ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(34): note: passing argument to parameter 'P_uint32CurrentWL' here
   34 | Std_ReturnType HESP32_SendMotorStatus               (uint32* P_uint32MotorSteps, uint32* P_uint32CurrentWL, uint8 Copy_uint8MotorNum);
      |                                                                                          ^
APP/SCommands/SCommands_Program.c(264): warning: passing 'volatile uint32 *' (aka 'volatile unsigned long *') to parameter of type 'uint32 *' (aka 'unsigned long *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  264 |     HESP32_SendMotorStatus(&glbl_uint8MotorSteps[1], &glbl_uint8CurrentWL, 1);
      |                            ^~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(34): note: passing argument to parameter 'P_uint32MotorSteps' here
   34 | Std_ReturnType HESP32_SendMotorStatus               (uint32* P_uint32MotorSteps, uint32* P_uint32CurrentWL, uint8 Copy_uint8MotorNum);
      |                                                              ^
APP/SCommands/SCommands_Program.c(264): warning: passing 'volatile uint32 *' (aka 'volatile unsigned long *') to parameter of type 'uint32 *' (aka 'unsigned long *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
  264 |     HESP32_SendMotorStatus(&glbl_uint8MotorSteps[1], &glbl_uint8CurrentWL, 1);
      |                                                      ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(34): note: passing argument to parameter 'P_uint32CurrentWL' here
   34 | Std_ReturnType HESP32_SendMotorStatus               (uint32* P_uint32MotorSteps, uint32* P_uint32CurrentWL, uint8 Copy_uint8MotorNum);
      |                                                                                          ^
APP/SCommands/SCommands_Program.c(269): warning: passing 'uint8[20]' (aka 'unsigned char[20]') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  269 |     snprintf(P_uint8WL, sizeof(P_uint8WL), "%d", glbl_uint8CurrentWL);
      |              ^~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdio.h(440): note: passing argument to parameter here
  440 | extern _ARMABI int snprintf(char * __restrict /*s*/, size_t /*n*/,
      |                                                    ^
APP/SCommands/SCommands_Program.c(269): warning: format specifies type 'int' but the argument has type 'uint32' (aka 'unsigned long') [-Wformat]
  269 |     snprintf(P_uint8WL, sizeof(P_uint8WL), "%d", glbl_uint8CurrentWL);
      |                                             ~~   ^~~~~~~~~~~~~~~~~~~
      |                                             %lu
APP/SCommands/SCommands_Program.c(293): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  293 |         Loc_PToken = strtok(P_uint8DateTime, "/");
      |                             ^~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\string.h(280): note: passing argument to parameter here
  280 | extern _ARMABI char *strtok(char * __restrict /*s1*/, const char * __restrict /*s2*/) __attribute__((__nonnull__(2)));
      |                                                     ^
APP/SCommands/SCommands_Program.c(293): warning: assigning to 'uint8 *' (aka 'unsigned char *') from 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  293 |         Loc_PToken = strtok(P_uint8DateTime, "/");
      |                    ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(297): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  297 |             date.m_months = atoi(Loc_PToken);
      |                                  ^~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(164): note: passing argument to parameter here
  164 | extern _ARMABI int atoi(const char * /*nptr*/) __attribute__((__nonnull__(1)));
      |                                              ^
APP/SCommands/SCommands_Program.c(297): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  297 |             date.m_months = atoi(Loc_PToken);
      |                           ~ ^~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(305): warning: assigning to 'uint8 *' (aka 'unsigned char *') from 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  305 |                     Loc_PToken = strtok(NULL_PTR, "/");
      |                                ^ ~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(313): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  313 |                                 date.m_days = atoi(Loc_PToken);
      |                                                    ^~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(164): note: passing argument to parameter here
  164 | extern _ARMABI int atoi(const char * /*nptr*/) __attribute__((__nonnull__(1)));
      |                                              ^
APP/SCommands/SCommands_Program.c(313): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  313 |                                 date.m_days = atoi(Loc_PToken);
      |                                             ~ ^~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(318): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  318 |                                 Loc_PToken = strtok(Loc_PToken, " ");
      |                                                     ^~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\string.h(280): note: passing argument to parameter here
  280 | extern _ARMABI char *strtok(char * __restrict /*s1*/, const char * __restrict /*s2*/) __attribute__((__nonnull__(2)));
      |                                                     ^
APP/SCommands/SCommands_Program.c(318): warning: assigning to 'uint8 *' (aka 'unsigned char *') from 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  318 |                                 Loc_PToken = strtok(Loc_PToken, " ");
      |                                            ^ ~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(326): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  326 |                     date.m_years = atoi(Loc_PToken);
      |                                         ^~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(164): note: passing argument to parameter here
  164 | extern _ARMABI int atoi(const char * /*nptr*/) __attribute__((__nonnull__(1)));
      |                                              ^
APP/SCommands/SCommands_Program.c(326): warning: implicit conversion loses integer precision: 'int' to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
  326 |                     date.m_years = atoi(Loc_PToken);
      |                                  ~ ^~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(327): warning: assigning to 'uint8 *' (aka 'unsigned char *') from 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  327 |                     Loc_PToken = strtok(NULL_PTR, ":");
      |                                ^ ~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(330): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  330 |                         time.m_hours = atoi(Loc_PToken);
      |                                             ^~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(164): note: passing argument to parameter here
  164 | extern _ARMABI int atoi(const char * /*nptr*/) __attribute__((__nonnull__(1)));
      |                                              ^
APP/SCommands/SCommands_Program.c(330): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  330 |                         time.m_hours = atoi(Loc_PToken);
      |                                      ~ ^~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(335): warning: assigning to 'uint8 *' (aka 'unsigned char *') from 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  335 |                     Loc_PToken = strtok(NULL_PTR, ":");
      |                                ^ ~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(342): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  342 |                                 time.m_minutes = atoi(Loc_PToken);
      |                                                       ^~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(164): note: passing argument to parameter here
  164 | extern _ARMABI int atoi(const char * /*nptr*/) __attribute__((__nonnull__(1)));
      |                                              ^
APP/SCommands/SCommands_Program.c(342): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  342 |                                 time.m_minutes = atoi(Loc_PToken);
      |                                                ~ ^~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(347): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  347 |                                 time.m_seconds = atoi(Loc_PToken);
      |                                                       ^~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(164): note: passing argument to parameter here
  164 | extern _ARMABI int atoi(const char * /*nptr*/) __attribute__((__nonnull__(1)));
      |                                              ^
APP/SCommands/SCommands_Program.c(347): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  347 |                                 time.m_seconds = atoi(Loc_PToken);
      |                                                ~ ^~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(361): warning: passing 'char[20]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  361 |                 HESP32_SendCommand("time update success");
      |                                    ^~~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(365): warning: passing 'char[19]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  365 |                 HESP32_SendCommand("time update failed");
      |                                    ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(370): warning: passing 'char[19]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  370 |             HESP32_SendCommand("time update failed");
      |                                ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(375): warning: passing 'char[19]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  375 |         HESP32_SendCommand("time update failed");
      |                            ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(382): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  382 |         uint32 Loc_uint32MotorSteps = atoi(P_uint8MotorSteps);
      |                                            ^~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(164): note: passing argument to parameter here
  164 | extern _ARMABI int atoi(const char * /*nptr*/) __attribute__((__nonnull__(1)));
      |                                              ^
APP/SCommands/SCommands_Program.c(382): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  382 |         uint32 Loc_uint32MotorSteps = atoi(P_uint8MotorSteps);
      |                ~~~~~~~~~~~~~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(387): warning: implicit conversion loses integer precision: 'uint32' (aka 'unsigned long') to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  387 |             HMOTOR_Step(HMOTOR_FILTER_SELECT, Loc_uint32MotorDiff, HMOTORS_CLKWISE_DIRECTION);
      |             ~~~~~~~~~~~                       ^~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(393): warning: implicit conversion loses integer precision: 'uint32' (aka 'unsigned long') to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  393 |             HMOTOR_Step(HMOTOR_FILTER_SELECT, Loc_uint32MotorDiff, HMOTORS_CCLKWISE_DIRECTION);
      |             ~~~~~~~~~~~                       ^~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(400): warning: passing 'char[6]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  400 |         HESP32_SendCommand("moved");
      |                            ^~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(404): warning: passing 'char[15]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  404 |         HESP32_SendCommand("failed to move");
      |                            ^~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(411): warning: passing 'char[6]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  411 |                 HESP32_SendCommand("saved");
      |                                    ^~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(415): warning: passing 'char[15]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  415 |                 HESP32_SendCommand("failed to save");
      |                                    ^~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(422): warning: passing 'char[6]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  422 |                 HESP32_SendCommand("saved");
      |                                    ^~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(426): warning: passing 'char[15]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  426 |                 HESP32_SendCommand("failed to save");
      |                                    ^~~~~~~~~~~~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(432): warning: a function declaration without a prototype is deprecated in all versions of C [-Wstrict-prototypes]
  432 | void seed_random() {
      |                 ^
      |                  void
APP/SCommands/SCommands_Program.c(432): warning: no previous prototype for function 'seed_random' [-Wmissing-prototypes]
  432 | void seed_random() {
      |      ^
APP/SCommands/SCommands_Program.c(432): note: declare 'static' if the function is not intended to be used outside of this translation unit
  432 | void seed_random() {
      | ^
      | static 
APP/SCommands/SCommands_Program.c(438): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  438 |     uint32 random_int = rand();
      |            ~~~~~~~~~~   ^~~~~~
APP/SCommands/SCommands_Program.c(439): warning: implicit conversion from 'uint32' (aka 'unsigned long') to 'float32' (aka 'float') may lose precision [-Wimplicit-int-float-conversion]
  439 |     float32 random_float = random_int * scale_factor;
      |                            ^~~~~~~~~~ ~
APP/SCommands/SCommands_Program.c(436): warning: no previous prototype for function 'random_float' [-Wmissing-prototypes]
  436 | float32 random_float(float32 min, float32 max) {
      |         ^
APP/SCommands/SCommands_Program.c(436): note: declare 'static' if the function is not intended to be used outside of this translation unit
  436 | float32 random_float(float32 min, float32 max) {
      | ^
      | static 
APP/SCommands/SCommands_Program.c(437): warning: implicit conversion from 'int' to 'float' changes value from 2147483647 to 2147483648 [-Wimplicit-const-int-float-conversion]
  437 |     float32 scale_factor = 1.0f / RAND_MAX;
      |                                 ~ ^~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(133): note: expanded from macro 'RAND_MAX'
  133 | #define RAND_MAX 0x7fffffff
      |                  ^~~~~~~~~~
APP/SCommands/SCommands_Program.c(445): warning: no previous prototype for function 'generate_random_values' [-Wmissing-prototypes]
  445 | void generate_random_values(float32 *I_reference, float32 *I_sample) {
      |      ^
APP/SCommands/SCommands_Program.c(445): note: declare 'static' if the function is not intended to be used outside of this translation unit
  445 | void generate_random_values(float32 *I_reference, float32 *I_sample) {
      | ^
      | static 
APP/SCommands/SCommands_Program.c(469): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  469 |         P_uint8Token = strtok(P_uint8ScanParam, " ");
      |                               ^~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\string.h(280): note: passing argument to parameter here
  280 | extern _ARMABI char *strtok(char * __restrict /*s1*/, const char * __restrict /*s2*/) __attribute__((__nonnull__(2)));
      |                                                     ^
APP/SCommands/SCommands_Program.c(469): warning: assigning to 'uint8 *' (aka 'unsigned char *') from 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  469 |         P_uint8Token = strtok(P_uint8ScanParam, " ");
      |                      ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(470): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  470 |         Loc_float32ScanParameters[Loc_uint8Index] = atof(P_uint8Token);
      |                                                          ^~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(158): note: passing argument to parameter here
  158 | extern _ARMABI double atof(const char * /*nptr*/) __attribute__((__nonnull__(1)));
      |                                                 ^
APP/SCommands/SCommands_Program.c(470): warning: implicit conversion loses floating-point precision: 'double' to 'float32' (aka 'float') [-Wimplicit-float-conversion]
  470 |         Loc_float32ScanParameters[Loc_uint8Index] = atof(P_uint8Token);
      |                                                   ~ ^~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(475): warning: assigning to 'uint8 *' (aka 'unsigned char *') from 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  475 |             P_uint8Token = strtok(NULL_PTR, " ");
      |                          ^ ~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(476): warning: passing 'uint8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  476 |             Loc_float32ScanParameters[Loc_uint8Index++] = atof(P_uint8Token);
      |                                                                ^~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(158): note: passing argument to parameter here
  158 | extern _ARMABI double atof(const char * /*nptr*/) __attribute__((__nonnull__(1)));
      |                                                 ^
APP/SCommands/SCommands_Program.c(476): warning: implicit conversion loses floating-point precision: 'double' to 'float32' (aka 'float') [-Wimplicit-float-conversion]
  476 |             Loc_float32ScanParameters[Loc_uint8Index++] = atof(P_uint8Token);
      |                                                         ~ ^~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(496): warning: passing 'char[5]' to parameter of type 'uint8 *' (aka 'unsigned char *') converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
  496 |                         HESP32_SendCommand("done");
      |                                            ^~~~~~
APP/SCommands/../../HAL/ESP32/ESP32_Interface.h(26): note: passing argument to parameter 'P_uint8Command' here
   26 | Std_ReturnType HESP32_SendCommand                   (uint8* P_uint8Command);
      |                                                             ^
APP/SCommands/SCommands_Program.c(484): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
  484 |             float32 Loc_float32Index = Loc_float32ScanParameters[0];
      |                     ^
APP/SCommands/SCommands_Program.c(507): warning: no newline at end of file [-Wnewline-eof]
  507 | }
      |  ^
APP/SCommands/SCommands_Program.c(177): warning: unsafe pointer arithmetic [-Wunsafe-buffer-usage]
  177 |     snprintf((glbl_uint8VoltageBuffer + 1), (sizeof(glbl_uint8VoltageBuffer) - 1), "%f", Loc_float32VoltageValue);
      |               ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(198): warning: unsafe pointer arithmetic [-Wunsafe-buffer-usage]
  198 |     snprintf((glbl_uint8VoltageBuffer + 1), (sizeof(glbl_uint8VoltageBuffer) - 1), "%f", Loc_float32FinalVoltageValue);
      |               ^~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(256): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  256 |     glbl_uint8MotorSteps[2] = 0;
      |     ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(257): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  257 |     HESP32_SendMotorStatus(&glbl_uint8MotorSteps[2], &glbl_uint8CurrentWL, 1);
      |                             ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(262): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  262 |     glbl_uint8MotorSteps[1] = 0;
      |     ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(264): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  264 |     HESP32_SendMotorStatus(&glbl_uint8MotorSteps[1], &glbl_uint8CurrentWL, 1);
      |                             ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(384): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  384 |         if(Loc_uint32MotorSteps > glbl_uint8MotorSteps[1])
      |                                   ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(386): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  386 |             Loc_uint32MotorDiff = Loc_uint32MotorSteps - glbl_uint8MotorSteps[1];
      |                                                          ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(388): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  388 |             glbl_uint8MotorSteps[1] = Loc_uint32MotorSteps;
      |             ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(390): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  390 |         else if(Loc_uint32MotorSteps < glbl_uint8MotorSteps[1])
      |                                        ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(392): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  392 |             Loc_uint32MotorDiff = glbl_uint8MotorSteps[1] - Loc_uint32MotorSteps;
      |                                   ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(394): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  394 |             glbl_uint8MotorSteps[1] = Loc_uint32MotorSteps;
      |             ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(470): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  470 |         Loc_float32ScanParameters[Loc_uint8Index] = atof(P_uint8Token);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(476): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  476 |             Loc_float32ScanParameters[Loc_uint8Index++] = atof(P_uint8Token);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(482): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  482 |             glbl_uint8MotorSteps[1] = 0;
      |             ^~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(488): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  488 |             while(Loc_float32Index < Loc_float32ScanParameters[1])
      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~
APP/SCommands/SCommands_Program.c(494): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  494 |                 Loc_float32Index += Loc_float32ScanParameters[2];
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~
115 warnings generated.
compiling SCommands_Program.c...
MCAL/I2C/I2C_Program.c(8): warning: In file included from...
MCAL/I2C/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/I2C/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/I2C/I2C_Program.c(8): warning: In file included from...
MCAL/I2C/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/I2C/I2C_Program.c(11): warning: In file included from...
MCAL/I2C/I2C_Interface.h(12): warning: In file included from...
MCAL/I2C/../../MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
MCAL/I2C/I2C_Program.c(11): warning: In file included from...
MCAL/I2C/I2C_Interface.h(62): warning: a function declaration without a prototype is deprecated in all versions of C [-Wstrict-prototypes]
   62 | void MCAL_I2C_RESET();
      |                    ^
      |                     void
MCAL/I2C/I2C_Program.c(13): warning: In file included from...
MCAL/I2C/../../MCAL/NVIC/NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
  151 | #endif /*_NVIC_INTERFACE_H_*/
      |                              ^
MCAL/I2C/I2C_Program.c(22): warning: missing field 'I2C_Mode' initializer [-Wmissing-field-initializers]
   22 | I2C_InitTypeDef Global_I2C_Config[2] = {0,0};
      |                                            ^
MCAL/I2C/I2C_Program.c(22): warning: suggest braces around initialization of subobject [-Wmissing-braces]
   22 | I2C_InitTypeDef Global_I2C_Config[2] = {0,0};
      |                                         ^~~
      |                                         {  }
MCAL/I2C/I2C_Program.c(22): warning: no previous extern declaration for non-static variable 'Global_I2C_Config' [-Wmissing-variable-declarations]
   22 | I2C_InitTypeDef Global_I2C_Config[2] = {0,0};
      |                 ^
MCAL/I2C/I2C_Program.c(22): note: declare 'static' if the variable is not intended to be used outside of this translation unit
   22 | I2C_InitTypeDef Global_I2C_Config[2] = {0,0};
      | ^
MCAL/I2C/I2C_Program.c(62): warning: implicit conversion loses integer precision: 'volatile uint32' (aka 'volatile unsigned long') to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
   62 |                 tmpreg = I2Cx->CR2;
      |                        ~ ~~~~~~^~~
MCAL/I2C/I2C_Program.c(112): warning: implicit conversion loses integer precision: 'volatile uint32' (aka 'volatile unsigned long') to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
  112 |                 tmpreg = I2Cx->CR1;
      |                        ~ ~~~~~~^~~
MCAL/I2C/I2C_Program.c(145): warning: a function declaration without a prototype is deprecated in all versions of C [-Wstrict-prototypes]
  145 | void MCAL_I2C_RESET()
      |                    ^
      |                     void
MCAL/I2C/I2C_Program.c(145): warning: no previous prototype for function 'MCAL_I2C_RESET' [-Wmissing-prototypes]
  145 | void MCAL_I2C_RESET()
      |      ^
MCAL/I2C/I2C_Interface.h(62): note: this declaration is not a prototype; add 'void' to make it a prototype for a zero-parameter function
   62 | void MCAL_I2C_RESET();
      |      ^              
      |                     void
MCAL/I2C/I2C_Program.c(170): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  170 |                 MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN6, MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ);
      |                                                           ^
MCAL/I2C/../../MCAL/GPIO/GPIO_Interface.h(53): note: expanded from macro 'MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ'
   53 | #define MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ            (uint32)0b1101     /* GPIO Output Alternate Function Open-Drain Mode, 10MHz */
      |                                                             ^
MCAL/I2C/I2C_Program.c(171): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  171 |                 MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN7, MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ);
      |                                                           ^
MCAL/I2C/../../MCAL/GPIO/GPIO_Interface.h(53): note: expanded from macro 'MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ'
   53 | #define MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ            (uint32)0b1101     /* GPIO Output Alternate Function Open-Drain Mode, 10MHz */
      |                                                             ^
MCAL/I2C/I2C_Program.c(177): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  177 |                 MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN10, MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ);
      |                                                            ^
MCAL/I2C/../../MCAL/GPIO/GPIO_Interface.h(53): note: expanded from macro 'MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ'
   53 | #define MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ            (uint32)0b1101     /* GPIO Output Alternate Function Open-Drain Mode, 10MHz */
      |                                                             ^
MCAL/I2C/I2C_Program.c(178): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  178 |                 MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN11, MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ);
      |                                                            ^
MCAL/I2C/../../MCAL/GPIO/GPIO_Interface.h(53): note: expanded from macro 'MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ'
   53 | #define MGPIO_OUTPUT_AF_OPEN_DRAIN_10MHZ            (uint32)0b1101     /* GPIO Output Alternate Function Open-Drain Mode, 10MHz */
      |                                                             ^
MCAL/I2C/I2C_Program.c(198): warning: comparison of integers of different signs: 'int' and 'uint32' (aka 'unsigned long') [-Wsign-compare]
  198 |         for(i = 0; i < dataLen; i++)
      |                    ~ ^ ~~~~~~~
MCAL/I2C/I2C_Program.c(239): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  239 |         I2Cx->CR1 &= ~(1 << 11);
      |                   ~~ ^~~~~~~~~~
MCAL/I2C/I2C_Program.c(240): warning: implicit conversion loses integer precision: 'volatile uint32' (aka 'volatile unsigned long') to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  240 |         uint8 sr1 = I2Cx->SR1;
      |               ~~~   ~~~~~~^~~
MCAL/I2C/I2C_Program.c(241): warning: implicit conversion loses integer precision: 'volatile uint32' (aka 'volatile unsigned long') to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  241 |         uint8 sr2 = I2Cx->SR2;
      |               ~~~   ~~~~~~^~~
MCAL/I2C/I2C_Program.c(245): warning: implicit conversion changes signedness: 'uint32' (aka 'unsigned long') to 'int' [-Wsign-conversion]
  245 |                 for(i = dataLen-1; i >= 0; i--)
      |                       ~ ~~~~~~~^~
MCAL/I2C/I2C_Program.c(250): warning: implicit conversion loses integer precision: 'volatile uint32' (aka 'volatile unsigned long') to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
  250 |                         dataOut[i] = I2Cx->DR;
      |                                    ~ ~~~~~~^~
MCAL/I2C/I2C_Program.c(240): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
  240 |         uint8 sr1 = I2Cx->SR1;
      |               ^
MCAL/I2C/I2C_Program.c(240): warning: unused variable 'sr1' [-Wunused-variable]
  240 |         uint8 sr1 = I2Cx->SR1;
      |               ^~~
MCAL/I2C/I2C_Program.c(241): warning: unused variable 'sr2' [-Wunused-variable]
  241 |         uint8 sr2 = I2Cx->SR2;
      |               ^~~
MCAL/I2C/I2C_Program.c(394): warning: implicit conversion loses integer precision: 'int' to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
  394 |         Address = (Address << 1);
      |                 ~  ~~~~~~~~^~~~
MCAL/I2C/I2C_Program.c(54): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   54 |                 Global_I2C_Config[I2C2_INDEX] = *I2C_InitStruct ;
      |                 ^~~~~~~~~~~~~~~~~
MCAL/I2C/I2C_Program.c(207): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  207 |                 I2Cx->DR = dataOut[i];
      |                            ^~~~~~~
MCAL/I2C/I2C_Program.c(250): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  250 |                         dataOut[i] = I2Cx->DR;
      |                         ^~~~~~~
MCAL/I2C/I2C_Program.c(265): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  265 |         if(Global_I2C_Config[index].I2C_ACK_Control == I2C_Ack_Enable)
      |            ^~~~~~~~~~~~~~~~~
30 warnings generated.
compiling I2C_Program.c...
MCAL/SPI/SPI_Program.c(9): warning: In file included from...
MCAL/SPI/SPI_Interface.h(11): warning: In file included from...
MCAL/SPI/SPI_Config.h(11): warning: In file included from...
MCAL/SPI/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
MCAL/SPI/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
MCAL/SPI/SPI_Program.c(9): warning: In file included from...
MCAL/SPI/SPI_Interface.h(11): warning: In file included from...
MCAL/SPI/SPI_Config.h(11): warning: In file included from...
MCAL/SPI/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
MCAL/SPI/SPI_Program.c(9): warning: In file included from...
MCAL/SPI/SPI_Interface.h(11): warning: In file included from...
MCAL/SPI/SPI_Config.h(35): warning: declaration of 'struct S_IRQ_SRC' will not be visible outside of this function [-Wvisibility]
   35 |         void(* P_IRQ_CallBack)(struct S_IRQ_SRC irq_scr); //set the C Function() which will be called once the IRQ Happen
      |                                       ^
MCAL/SPI/SPI_Program.c(9): warning: In file included from...
MCAL/SPI/SPI_Interface.h(15): warning: In file included from...
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
MCAL/SPI/SPI_Program.c(16): warning: no previous extern declaration for non-static variable 'Global_SPI_Config' [-Wmissing-variable-declarations]
   16 | SPI_Config* Global_SPI_Config[2]  = {0,0} ;
      |             ^
MCAL/SPI/SPI_Program.c(16): note: declare 'static' if the variable is not intended to be used outside of this translation unit
   16 | SPI_Config* Global_SPI_Config[2]  = {0,0} ;
      | ^
MCAL/SPI/SPI_Program.c(9): warning: In file included from...
MCAL/SPI/SPI_Interface.h(11): warning: In file included from...
MCAL/SPI/SPI_Config.h(35): warning: padding struct 'SPI_Config' with 2 bytes to align 'P_IRQ_CallBack' [-Wpadded]
   35 |         void(* P_IRQ_CallBack)(struct S_IRQ_SRC irq_scr); //set the C Function() which will be called once the IRQ Happen
      |                ^
MCAL/SPI/SPI_Program.c(130): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
  130 |         SPIx->SPI_I2SCFGR &= ~(1<<11);
      |                           ~~ ^~~~~~~~
MCAL/SPI/SPI_Program.c(91): warning: result of comparison of constant 4294967291 with expression of type 'uint16' (aka 'unsigned short') is always false [-Wtautological-constant-out-of-range-compare]
   91 |         }else   if (SPI_Config->NSS == SPI_NSS_Hard_Master_SS_output_disable )
      |                     ~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(160): warning: implicit conversion loses integer precision: 'volatile uint32' (aka 'volatile unsigned long') to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
  160 |         *pTxBuffer = SPIx->SPI_DR;
      |                    ~ ~~~~~~^~~~~~
MCAL/SPI/SPI_Program.c(155): warning: unused parameter 'PollingEn' [-Wunused-parameter]
  155 | void  MCAL_SPI_TX_RX (SPI_TypeDef *SPIx, uint16 *pTxBuffer,enum PollingMechism PollingEn )
      |                                                                                ^
MCAL/SPI/SPI_Program.c(212): warning: implicit conversion loses integer precision: 'volatile uint32' (aka 'volatile unsigned long') to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
  212 |                 *pTxBuffer =    SPIx->SPI_DR  ;
      |                            ~    ~~~~~~^~~~~~
MCAL/SPI/SPI_Program.c(269): warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  269 |                         case SPI_NSS_Hard_Master_SS_output_disable:
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Config.h(80): note: expanded from macro 'SPI_NSS_Hard_Master_SS_output_disable'
   80 | #define SPI_NSS_Hard_Master_SS_output_disable           ~(0x1U << 2)       //SPI_CR2 Bit 2 SSOE: SS output disable
      |                                                         ^~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(271): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  271 |                                 MGPIO_SetPinMode(MGPIO_PORTA, MGPIO_PIN4, MGPIO_INPUT_FLOATING_MODE);
      |                                                                           ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(46): note: expanded from macro 'MGPIO_INPUT_FLOATING_MODE'
   46 | #define MGPIO_INPUT_FLOATING_MODE                   (uint32)0b0100     /* GPIO Input Floating Mode */
      |                                                             ^
MCAL/SPI/SPI_Program.c(277): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  277 |                                 MGPIO_SetPinMode(MGPIO_PORTA, MGPIO_PIN4, MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ);
      |                                                                           ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(52): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ'
   52 | #define MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ             (uint32)0b1001     /* GPIO Output Alternate Function Push-Pull Mode, 10MHz */
      |                                                             ^
MCAL/SPI/SPI_Program.c(269): warning: overflow converting case value to switch condition type (4294967291 to 65531) [-Wswitch]
  269 |                         case SPI_NSS_Hard_Master_SS_output_disable:
      |                              ^
MCAL/SPI/SPI_Config.h(80): note: expanded from macro 'SPI_NSS_Hard_Master_SS_output_disable'
   80 | #define SPI_NSS_Hard_Master_SS_output_disable           ~(0x1U << 2)       //SPI_CR2 Bit 2 SSOE: SS output disable
      |                                                         ^
MCAL/SPI/SPI_Program.c(284): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  284 |                         MGPIO_SetPinMode(MGPIO_PORTA, MGPIO_PIN5, MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ);
      |                                                                   ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(52): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ'
   52 | #define MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ             (uint32)0b1001     /* GPIO Output Alternate Function Push-Pull Mode, 10MHz */
      |                                                             ^
MCAL/SPI/SPI_Program.c(290): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  290 |                         MGPIO_SetPinMode(MGPIO_PORTA, MGPIO_PIN6, MGPIO_INPUT_FLOATING_MODE);
      |                                                                   ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(46): note: expanded from macro 'MGPIO_INPUT_FLOATING_MODE'
   46 | #define MGPIO_INPUT_FLOATING_MODE                   (uint32)0b0100     /* GPIO Input Floating Mode */
      |                                                             ^
MCAL/SPI/SPI_Program.c(297): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  297 |                         MGPIO_SetPinMode(MGPIO_PORTA, MGPIO_PIN7, MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ);
      |                                                                   ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(52): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ'
   52 | #define MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ             (uint32)0b1001     /* GPIO Output Alternate Function Push-Pull Mode, 10MHz */
      |                                                             ^
MCAL/SPI/SPI_Program.c(310): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  310 |                                 MGPIO_SetPinMode(MGPIO_PORTA, MGPIO_PIN4, MGPIO_INPUT_FLOATING_MODE);
      |                                                                           ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(46): note: expanded from macro 'MGPIO_INPUT_FLOATING_MODE'
   46 | #define MGPIO_INPUT_FLOATING_MODE                   (uint32)0b0100     /* GPIO Input Floating Mode */
      |                                                             ^
MCAL/SPI/SPI_Program.c(316): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  316 |                         MGPIO_SetPinMode(MGPIO_PORTA, MGPIO_PIN5, MGPIO_INPUT_FLOATING_MODE);
      |                                                                   ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(46): note: expanded from macro 'MGPIO_INPUT_FLOATING_MODE'
   46 | #define MGPIO_INPUT_FLOATING_MODE                   (uint32)0b0100     /* GPIO Input Floating Mode */
      |                                                             ^
MCAL/SPI/SPI_Program.c(322): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  322 |                         MGPIO_SetPinMode(MGPIO_PORTA, MGPIO_PIN6, MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ);
      |                                                                   ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(52): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ'
   52 | #define MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ             (uint32)0b1001     /* GPIO Output Alternate Function Push-Pull Mode, 10MHz */
      |                                                             ^
MCAL/SPI/SPI_Program.c(326): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  326 |                         MGPIO_SetPinMode(MGPIO_PORTA, MGPIO_PIN7, MGPIO_INPUT_FLOATING_MODE);
      |                                                                   ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(46): note: expanded from macro 'MGPIO_INPUT_FLOATING_MODE'
   46 | #define MGPIO_INPUT_FLOATING_MODE                   (uint32)0b0100     /* GPIO Input Floating Mode */
      |                                                             ^
MCAL/SPI/SPI_Program.c(349): warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
  349 |                         case SPI_NSS_Hard_Master_SS_output_disable:
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Config.h(80): note: expanded from macro 'SPI_NSS_Hard_Master_SS_output_disable'
   80 | #define SPI_NSS_Hard_Master_SS_output_disable           ~(0x1U << 2)       //SPI_CR2 Bit 2 SSOE: SS output disable
      |                                                         ^~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(351): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  351 |                                 MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN12, MGPIO_INPUT_FLOATING_MODE);
      |                                                                            ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(46): note: expanded from macro 'MGPIO_INPUT_FLOATING_MODE'
   46 | #define MGPIO_INPUT_FLOATING_MODE                   (uint32)0b0100     /* GPIO Input Floating Mode */
      |                                                             ^
MCAL/SPI/SPI_Program.c(357): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  357 |                                 MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN12, MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ);
      |                                                                            ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(52): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ'
   52 | #define MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ             (uint32)0b1001     /* GPIO Output Alternate Function Push-Pull Mode, 10MHz */
      |                                                             ^
MCAL/SPI/SPI_Program.c(349): warning: overflow converting case value to switch condition type (4294967291 to 65531) [-Wswitch]
  349 |                         case SPI_NSS_Hard_Master_SS_output_disable:
      |                              ^
MCAL/SPI/SPI_Config.h(80): note: expanded from macro 'SPI_NSS_Hard_Master_SS_output_disable'
   80 | #define SPI_NSS_Hard_Master_SS_output_disable           ~(0x1U << 2)       //SPI_CR2 Bit 2 SSOE: SS output disable
      |                                                         ^
MCAL/SPI/SPI_Program.c(364): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  364 |                         MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN13, MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ);
      |                                                                    ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(52): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ'
   52 | #define MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ             (uint32)0b1001     /* GPIO Output Alternate Function Push-Pull Mode, 10MHz */
      |                                                             ^
MCAL/SPI/SPI_Program.c(370): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  370 |                         MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN14, MGPIO_INPUT_FLOATING_MODE);
      |                                                                    ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(46): note: expanded from macro 'MGPIO_INPUT_FLOATING_MODE'
   46 | #define MGPIO_INPUT_FLOATING_MODE                   (uint32)0b0100     /* GPIO Input Floating Mode */
      |                                                             ^
MCAL/SPI/SPI_Program.c(377): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  377 |                         MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN15, MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ);
      |                                                                    ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(52): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ'
   52 | #define MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ             (uint32)0b1001     /* GPIO Output Alternate Function Push-Pull Mode, 10MHz */
      |                                                             ^
MCAL/SPI/SPI_Program.c(391): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  391 |                                 MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN12, MGPIO_INPUT_FLOATING_MODE);
      |                                                                            ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(46): note: expanded from macro 'MGPIO_INPUT_FLOATING_MODE'
   46 | #define MGPIO_INPUT_FLOATING_MODE                   (uint32)0b0100     /* GPIO Input Floating Mode */
      |                                                             ^
MCAL/SPI/SPI_Program.c(397): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  397 |                         MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN13, MGPIO_INPUT_FLOATING_MODE);
      |                                                                    ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(46): note: expanded from macro 'MGPIO_INPUT_FLOATING_MODE'
   46 | #define MGPIO_INPUT_FLOATING_MODE                   (uint32)0b0100     /* GPIO Input Floating Mode */
      |                                                             ^
MCAL/SPI/SPI_Program.c(403): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  403 |                         MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN14, MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ);
      |                                                                    ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(52): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ'
   52 | #define MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ             (uint32)0b1001     /* GPIO Output Alternate Function Push-Pull Mode, 10MHz */
      |                                                             ^
MCAL/SPI/SPI_Program.c(407): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
  407 |                         MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN15, MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ);
      |                                                                    ^
MCAL/SPI/../../MCAL/GPIO/GPIO_Interface.h(52): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ'
   52 | #define MGPIO_OUTPUT_AF_PUSH_PULL_10MHZ             (uint32)0b1001     /* GPIO Output Alternate Function Push-Pull Mode, 10MHz */
      |                                                             ^
MCAL/SPI/SPI_Program.c(17): warning: no previous extern declaration for non-static variable 'Global_SPI_Config1' [-Wmissing-variable-declarations]
   17 | SPI_Config Global_SPI_Config1 ;
      |            ^
MCAL/SPI/SPI_Program.c(17): note: declare 'static' if the variable is not intended to be used outside of this translation unit
   17 | SPI_Config Global_SPI_Config1 ;
      | ^
MCAL/SPI/SPI_Program.c(18): warning: no previous extern declaration for non-static variable 'Global_SPI_Config2' [-Wmissing-variable-declarations]
   18 | SPI_Config Global_SPI_Config2 ;
      |            ^
MCAL/SPI/SPI_Program.c(18): note: declare 'static' if the variable is not intended to be used outside of this translation unit
   18 | SPI_Config Global_SPI_Config2 ;
      | ^
MCAL/SPI/SPI_Program.c(58): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   58 |                 Global_SPI_Config[SPI2_INDEX] =  &Global_SPI_Config2 ;
      |                 ^~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(177): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  177 |         if (Global_SPI_Config[index]->Communication_Mode ==  SPI_Direction_2LINES || Global_SPI_Config[index]->Communication_Mode == SPI_Direction_1LINE_transmit_only) {
      |             ^~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(177): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  177 |         if (Global_SPI_Config[index]->Communication_Mode ==  SPI_Direction_2LINES || Global_SPI_Config[index]->Communication_Mode == SPI_Direction_1LINE_transmit_only) {
      |                                                                                      ^~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(205): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  205 |         if ( (Global_SPI_Config[index]->Communication_Mode ==  SPI_Direction_2LINES)  || (Global_SPI_Config[index]->Communication_Mode  ==  SPI_Direction_2LINES_RXONLY) )
      |               ^~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(205): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  205 |         if ( (Global_SPI_Config[index]->Communication_Mode ==  SPI_Direction_2LINES)  || (Global_SPI_Config[index]->Communication_Mode  ==  SPI_Direction_2LINES_RXONLY) )
      |                                                                                           ^~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(340): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  340 |                 if (Global_SPI_Config[SPI2_INDEX]->Device_Mode == SPI_Device_Mode_MASTER )
      |                     ^~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(346): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  346 |                         switch  (Global_SPI_Config[SPI2_INDEX]->NSS)
      |                                  ^~~~~~~~~~~~~~~~~
MCAL/SPI/SPI_Program.c(386): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  386 |                         switch  (Global_SPI_Config[SPI2_INDEX]->NSS)
      |                                  ^~~~~~~~~~~~~~~~~
43 warnings generated.
compiling SPI_Program.c...
HAL/EEPROM/EEPROM.c(8): warning: In file included from...
HAL/EEPROM/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
HAL/EEPROM/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
HAL/EEPROM/EEPROM.c(8): warning: In file included from...
HAL/EEPROM/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
HAL/EEPROM/EEPROM.c(10): warning: In file included from...
HAL/EEPROM/EEPROM.h(11): warning: In file included from...
HAL/EEPROM/../../MCAL/I2C/I2C_Interface.h(12): warning: In file included from...
HAL/EEPROM/../../MCAL/I2C/../../MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
HAL/EEPROM/EEPROM.c(10): warning: In file included from...
HAL/EEPROM/EEPROM.h(11): warning: In file included from...
HAL/EEPROM/../../MCAL/I2C/I2C_Interface.h(62): warning: a function declaration without a prototype is deprecated in all versions of C [-Wstrict-prototypes]
   62 | void MCAL_I2C_RESET();
      |                    ^
      |                     void
HAL/EEPROM/EEPROM.c(53): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   53 |         MCAL_I2C_MASTER_TX(I2C1, EEPROM_Slave_address, buffer, (Data_Length+1), With_Stop, Start);
      |                                  ^
HAL/EEPROM/EEPROM.h(13): note: expanded from macro 'EEPROM_Slave_address'
   13 | #define EEPROM_Slave_address            0b1010000
      |                                         ^
HAL/EEPROM/EEPROM.c(67): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   67 |         MCAL_I2C_MASTER_TX(I2C1, EEPROM_Slave_address , buffer, 1,Without_Stop ,Start); //Write Address Only
      |                                  ^
HAL/EEPROM/EEPROM.h(13): note: expanded from macro 'EEPROM_Slave_address'
   13 | #define EEPROM_Slave_address            0b1010000
      |                                         ^
HAL/EEPROM/EEPROM.c(69): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   69 |         MCAL_I2C_MASTER_RX(I2C1, EEPROM_Slave_address, dataOut, dataLen,With_Stop,repeated_start);                      //Read Data
      |                                  ^
HAL/EEPROM/EEPROM.h(13): note: expanded from macro 'EEPROM_Slave_address'
   13 | #define EEPROM_Slave_address            0b1010000
      |                                         ^
HAL/EEPROM/EEPROM.c(51): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   51 |         {buffer[i] = bytes[i-1] ;}
      |          ^~~~~~
HAL/EEPROM/EEPROM.c(51): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   51 |         {buffer[i] = bytes[i-1] ;}
      |                      ^~~~~
9 warnings generated.
compiling EEPROM.c...
HAL/ADS1115/ADS1115.c(10): warning: In file included from...
HAL/ADS1115/../../LIB/STD_TYPES/Std_Types.h(13): warning: In file included from...
HAL/ADS1115/../../LIB/STD_TYPES/Platform_Types.h(72): warning: no newline at end of file [-Wnewline-eof]
   72 | #endif /*_PLATFORM_TYPES_H_*/
      |                              ^
HAL/ADS1115/ADS1115.c(10): warning: In file included from...
HAL/ADS1115/../../LIB/STD_TYPES/Std_Types.h(30): warning: no newline at end of file [-Wnewline-eof]
   30 | #endif /*_STD_TYPES_H_*/
      |                         ^
HAL/ADS1115/ADS1115.c(12): warning: In file included from...
HAL/ADS1115/../../MCAL/GPIO/GPIO_Interface.h(131): warning: no newline at end of file [-Wnewline-eof]
  131 | #endif /*_GPIO_INTERFACE_H_*/
      |                              ^
HAL/ADS1115/ADS1115.c(13): warning: In file included from...
HAL/ADS1115/../../MCAL/I2C/I2C_Interface.h(62): warning: a function declaration without a prototype is deprecated in all versions of C [-Wstrict-prototypes]
   62 | void MCAL_I2C_RESET();
      |                    ^
      |                     void
HAL/ADS1115/ADS1115.c(14): warning: In file included from...
HAL/ADS1115/ADS1115.h(28): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   28 |         MUX_AIN0_AIN1 = 0b000,
      |                         ^
HAL/ADS1115/ADS1115.h(29): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   29 |         MUX_AIN0_AIN3 = 0b001,
      |                         ^
HAL/ADS1115/ADS1115.h(30): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   30 |         MUX_AIN1_AIN3 = 0b010,
      |                         ^
HAL/ADS1115/ADS1115.h(31): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   31 |         MUX_AIN2_AIN3 = 0b011,
      |                         ^
HAL/ADS1115/ADS1115.h(32): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   32 |         MUX_AIN0_GND = 0b100,
      |                        ^
HAL/ADS1115/ADS1115.h(33): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   33 |         MUX_AIN1_GND = 0b101,
      |                        ^
HAL/ADS1115/ADS1115.h(34): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   34 |         MUX_AIN2_GND = 0b110,
      |                        ^
HAL/ADS1115/ADS1115.h(35): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   35 |         MUX_AIN3_GND = 0b111,
      |                        ^
HAL/ADS1115/ADS1115.h(36): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   36 |         PGA_6_144 = 0b000,
      |                     ^
HAL/ADS1115/ADS1115.h(37): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   37 |         PGA_4_096 = 0b001,
      |                     ^
HAL/ADS1115/ADS1115.h(38): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   38 |         PGA_2_048 = 0b010,
      |                     ^
HAL/ADS1115/ADS1115.h(39): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   39 |         PGA_1_024 = 0b011,
      |                     ^
HAL/ADS1115/ADS1115.h(40): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   40 |         PGA_0_512 = 0b100,
      |                     ^
HAL/ADS1115/ADS1115.h(41): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   41 |         PGA_0_256 = 0b101,
      |                     ^
HAL/ADS1115/ADS1115.h(44): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   44 |         DR_8SPS = 0b000,
      |                   ^
HAL/ADS1115/ADS1115.h(45): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   45 |         DR_16SPS = 0b001,
      |                    ^
HAL/ADS1115/ADS1115.h(46): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   46 |         DR_32SPS = 0b010,
      |                    ^
HAL/ADS1115/ADS1115.h(47): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   47 |         DR_64SPS = 0b011,
      |                    ^
HAL/ADS1115/ADS1115.h(48): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   48 |         DR_128SPS = 0b100,
      |                     ^
HAL/ADS1115/ADS1115.h(49): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   49 |         DR_250SPS = 0b101,
      |                     ^
HAL/ADS1115/ADS1115.h(50): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   50 |         DR_475SPS = 0b110,
      |                     ^
HAL/ADS1115/ADS1115.h(51): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
   51 |         DR_860SPS = 0b111,
      |                     ^
HAL/ADS1115/ADS1115.c(46): warning: declaration shadows a variable in the global scope [-Wshadow]
   46 |         uint8 ch4[2];
      |               ^
HAL/ADS1115/ADS1115.c(16): note: previous declaration is here
   16 | uint8 ch4[2];
      |       ^
HAL/ADS1115/ADS1115.c(50): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
   50 |         ch[1] = (a.OS << 7) | (a.MUX << 4) | (a.PGA<<1) | (a.MODE<<0);
      |               ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
HAL/ADS1115/ADS1115.c(51): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
   51 |         ch[2] = (a.DR<<5) | (a.COMP_MODE<<4) | (a.COMP_POL<<3) | (a.COMP_LAT<<2) | (a.COMP_QUE);
      |               ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
HAL/ADS1115/ADS1115.c(57): warning: implicit conversion loses integer precision: 'int' to 'uint16' (aka 'unsigned short') [-Wimplicit-int-conversion]
   57 |         reading = (ch4[1] << 8) | ch4[0];
      |                 ~ ~~~~~~~~~~~~~~^~~~~~~~
HAL/ADS1115/ADS1115.c(45): warning: unused variable 'ch2' [-Wunused-variable]
   45 |         uint8 ch[3], ch2[2];
      |                      ^~~
HAL/ADS1115/ADS1115.c(16): warning: no previous extern declaration for non-static variable 'ch4' [-Wmissing-variable-declarations]
   16 | uint8 ch4[2];
      |       ^
HAL/ADS1115/ADS1115.c(16): note: declare 'static' if the variable is not intended to be used outside of this translation unit
   16 | uint8 ch4[2];
      | ^
HAL/ADS1115/ADS1115.c(50): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   50 |         ch[1] = (a.OS << 7) | (a.MUX << 4) | (a.PGA<<1) | (a.MODE<<0);
      |         ^~
HAL/ADS1115/ADS1115.c(51): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   51 |         ch[2] = (a.DR<<5) | (a.COMP_MODE<<4) | (a.COMP_POL<<3) | (a.COMP_LAT<<2) | (a.COMP_QUE);
      |         ^~
HAL/ADS1115/ADS1115.c(57): warning: unsafe buffer access [-Wunsafe-buffer-usage]
   57 |         reading = (ch4[1] << 8) | ch4[0];
      |                    ^~~
35 warnings generated.
compiling ADS1115.c...
assembling startup_stm32f10x_md.s...
RTE/Device/STM32F103C8/system_stm32f10x.c(64): warning: In file included from...
C:/Users/Ahmed/AppData/Local/Arm/Packs/Keil/STM32F1xx_DFP/2.4.1/Device/Include\stm32f10x.h(18): warning: invalid UTF-8 in comment [-Winvalid-utf8]
   18 |   *              - To use or not the peripheral<92>s drivers in application code(i.e. 
      |                                                ^
C:/Users/Ahmed/AppData/Local/Arm/Packs/Keil/STM32F1xx_DFP/2.4.1/Device/Include\stm32f10x.h(19): warning: invalid UTF-8 in comment [-Winvalid-utf8]
   19 |   *                code will be based on direct access to peripheral<92>s registers 
      |                                                                     ^
C:/Users/Ahmed/AppData/Local/Arm/Packs/Keil/STM32F1xx_DFP/2.4.1/Device/Include\stm32f10x.h(26): warning: invalid UTF-8 in comment [-Winvalid-utf8]
   26 |   *           - Macros to access peripheral<92>s registers hardware
      |                                            ^
RTE/Device/STM32F103C8/system_stm32f10x.c(166): warning: no previous extern declaration for non-static variable 'AHBPrescTable' [-Wmissing-variable-declarations]
  166 | __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
      |             ^
RTE/Device/STM32F103C8/system_stm32f10x.c(166): note: declare 'static' if the variable is not intended to be used outside of this translation unit
  166 | __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
      |     ^
RTE/Device/STM32F103C8/system_stm32f10x.c(408): warning: unsafe buffer access [-Wunsafe-buffer-usage]
  408 |   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
      |         ^~~~~~~~~~~~~
5 warnings generated.
compiling system_stm32f10x.c...
linking...
Program Size: Code=28464 RO-data=956 RW-data=524 ZI-data=2252  
".\Objects\stm32_spectro.axf" - 0 Error(s), 685 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                https://www.keil.com/pack/ARM.CMSIS.6.0.0.pack
                ARM::CMSIS@6.0.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 6.0.0

Package Vendor: Keil
                https://www.keil.com/pack/Keil.STM32F1xx_DFP.2.4.1.pack
                Keil::STM32F1xx_DFP@2.4.1
                STMicroelectronics STM32F1 Series Device Support, Drivers and Examples
   * Component: Startup Version: 1.0.0

<h2>Collection of Component include folders:</h2>
  ./RTE/Device/STM32F103C8
  ./RTE/_Target_1
  C:/Users/Ahmed/AppData/Local/Arm/Packs/ARM/CMSIS/6.0.0/CMSIS/Core/Include
  C:/Users/Ahmed/AppData/Local/Arm/Packs/Keil/STM32F1xx_DFP/2.4.1/Device/Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE@6.0.0

   * Component: Keil::Device:Startup@1.0.0
      Source file:   Device/Source/ARM/STM32F1xx_OPT.s
      Source file:   Device/Source/system_stm32f10x.c
      Source file:   Device/Source/ARM/startup_stm32f10x_md.s
      Include file:  RTE_Driver/Config/RTE_Device.h
Build Time Elapsed:  00:00:05
</pre>
</body>
</html>
