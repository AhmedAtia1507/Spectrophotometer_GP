commands:
 
1-lamps commands
2-Supply commands
3-time commands
4- motors
5-photodetector

//add new commands titles here to make it easy to find
===============================================================================================================

1-lamps commands

uv:
get-uv  //send uv lamp stutus ==> on/off
set-uv-on   //turn uv lamp on ==> reply with current stutus after toggle on/off 
set-uv-off  //turn uv lamp off ==> reply with current stutus after toggle on/off

vi:
get-vi  //send visible lamp stutus ==> on/off
set-vi-on   //turn visible lamp on ==> reply with current stutus after toggle on/off
set-vi-off  ////turn visible lamp off ==> reply with current stutus after toggle on/off

===============================================================================================================

2-Supply commands

note: +12 -12 are dc dc converter and 12 is the lamp supply

get-voltages  //send the current supplies voltages ==> replay with p12 n12 p5 p33 twelve like 12 -12 5 3.3 12


=================================================================================================================

3-time commands
//send time

get-time  //send the time ==> send day/month/year hour:minutes:seconds in 24 format like( 1/13/2024 13:32:12 )

//update your time
set-time-{date time} like "set-time-1/13/2024 13:32:12\n"==> responde when done with "time update success" or "time update failed"
=================================================================================================================

4-motors
//send current motors position
get-motors-steps  //send motor steps and current wavelength ==> response with "lampmoter-gratingmotor-filtermotor-currentwavelength\n" like 50-34-200-1100

//gohome
lampmotorhome      //send lamp moter home ==>respond with the current step after excuting the gohome function like "0\n"
gratingmotorhome   // same but for grating ==>same
filtermotorhome    // same but for filter ==> same
get-current-wav           //send me the current wavelength ==> just the number  like "1100\n"

//calibration   //removed move-to command 
savestep-(value)  like savestep-122   //save the value in the eeprom  ==> respond with "saved" or "failed to save"
savewave-(value)  like savewave-1100  //save the value in the eeprom  ==> respond with "saved" or "failed to save"

//new commands updated
//lamp moter
get-lamp-moter-position    //send lamp moter current position ==> "UV Lamp" or "VI Lamp"
set-lamp-moter-VI          //set the lamp moter to be in the VI ==>response with "moved" or "failed to move"
set-lamp-moter-UV          //set the lamp moter to be in the UV ==>response with "moved" or "failed to move"

//filter moter
set-filtermoter-to-L-(value) like set-filtermoter-to-L-100    //send the filter moter to the "value" steps to the left ==> respond with "moved" or "failed to move"
set-filtermoter-to-R-(value) like set-filtermoter-to-R-100    //send the filter moter to the "value" steps to the right ==> respond with "moved" or "failed to move"
set-filtermoter-to-(value) like set-filtermoter-to-F1    //send the filter moter to the "value" filter position ==> respond with "moved" or "failed to move"

//grating moter

set-gratingmoter-to-WL-(value) like set-gratingmoter-to-WL-100   //send the grating moter to the "value"in nm position ==> respond with "moved" or "failed to move"
set-gratingmoter-to-L-(value) like set-gratingmoter-to-L-100   //send the grating moter to the "value"  in steps pto the left ==> respond with "moved" or "failed to move"
set-gratingmoter-to-R-(value) like set-gratingmoter-to-R-100   //send the grating moter to the "value"  in steps pto the right ==> respond with "moved" or "failed to move"

=====================================================================================================================================================================
5-photodetector


snddet //send the current detector readings ==>replay with refernce small signal - refernce amplified signal- sample small signal-sample amplified signal-current digital pot gain like 1-9-2-18-9
set-newgain-(value)  like set-newgain-12 //apply the new gaon then reply replay with "applied" or "not applied"