<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.32.0.0
Copyright (C) 2020 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Ahmed Atia, HP Inc., LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.32.0.0
Toolchain Path:  D:\KEIL_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.14.1
Assembler:       Armasm.exe V6.14.1
Linker/Locator:  ArmLink.exe V6.14.1
Library Manager: ArmAr.exe V6.14.1
Hex Converter:   FromElf.exe V6.14.1
CPU DLL:         SARMCM3.DLL V5.32.0.0
Dialog DLL:      DCM.DLL V1.17.3.0
Target DLL:      UL2CM3.DLL V1.163.9.0
Dialog DLL:      TCM.DLL V1.46.0.0
 
<h2>Project:</h2>
D:\Senior_2\Graduation_Project\COTS\STM32F103C8T6\DRIVERS_TEST\ESP32_TEST\ESP32\ESP32_TEST.uvprojx
Project File Date:  11/30/2023

<h2>Output:</h2>
*** Using Compiler 'V6.14.1', folder: 'D:\KEIL_v5\ARM\ARMCLANG\Bin'
Rebuild target 'Target 1'
GPIO_Program.c(12): warning: In file included from...
./Std_Types.h(14): warning: In file included from...
./Platform_Types.h(73): warning: no newline at end of file [-Wnewline-eof]
#endif /*_PLATFORM_TYPES_H_*/
                             ^
GPIO_Program.c(12): warning: In file included from...
./Std_Types.h(31): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STD_TYPES_H_*/
                        ^
GPIO_Program.c(14): warning: In file included from...
./GPIO_Private.h(138): warning: no newline at end of file [-Wnewline-eof]
#endif /*_GPIO_PRIVATE_H_*/
                           ^
GPIO_Program.c(15): warning: In file included from...
./GPIO_Interface.h(108): warning: no newline at end of file [-Wnewline-eof]
#endif /*_GPIO_INTERFACE_H_*/
                             ^
GPIO_Program.c(16): warning: In file included from...
./GPIO_Config.h(14): warning: no newline at end of file [-Wnewline-eof]
#endif /*_GPIO_CONFIG_H_*/
                          ^
GPIO_Program.c(38): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
                MGPIOA_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
                                 ^
GPIO_Program.c(38): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOA_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
                           ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(39): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOA_CRL |= ((Copy_uint8PinMode) << (4 * Copy_uint8PinID));
                           ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(44): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
                MGPIOA_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
                                 ^
GPIO_Program.c(44): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOA_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
                           ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(45): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOA_CRH |= ((Copy_uint8PinMode) << (4 * (Copy_uint8PinID - 8)));
                           ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(54): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
                MGPIOB_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
                                 ^
GPIO_Program.c(54): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOB_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
                           ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(55): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOB_CRL |= ((Copy_uint8PinMode) << (4 * Copy_uint8PinID));
                           ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(60): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
                MGPIOB_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
                                 ^
GPIO_Program.c(60): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOB_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
                           ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(61): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOB_CRH |= ((Copy_uint8PinMode) << (4 * (Copy_uint8PinID - 8)));
                           ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(70): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
                MGPIOC_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
                                 ^
GPIO_Program.c(70): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOC_CRL &= ~((0b1111) << (4 * Copy_uint8PinID));
                           ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(71): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOC_CRL |= ((Copy_uint8PinMode) << (4 * Copy_uint8PinID));
                           ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(77): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
                MGPIOC_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
                                 ^
GPIO_Program.c(77): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOC_CRH &= ~((0b1111) << (4 * (Copy_uint8PinID - 8)));
                           ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(78): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MGPIOC_CRH |= ((Copy_uint8PinMode) << (4 * (Copy_uint8PinID - 8)));
                           ~~  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GPIO_Program.c(270): warning: no newline at end of file [-Wnewline-eof]
}
 ^
24 warnings generated.
compiling GPIO_Program.c...
ESP32_Program.c(14): warning: In file included from...
./Std_Types.h(14): warning: In file included from...
./Platform_Types.h(73): warning: no newline at end of file [-Wnewline-eof]
#endif /*_PLATFORM_TYPES_H_*/
                             ^
ESP32_Program.c(14): warning: In file included from...
./Std_Types.h(31): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STD_TYPES_H_*/
                        ^
ESP32_Program.c(17): warning: In file included from...
./GPIO_Interface.h(108): warning: no newline at end of file [-Wnewline-eof]
#endif /*_GPIO_INTERFACE_H_*/
                             ^
ESP32_Program.c(18): warning: In file included from...
./UART_Interface.h(128): warning: no newline at end of file [-Wnewline-eof]
#endif /*_UART_INTERFACE_H_*/
                             ^
ESP32_Program.c(19): warning: In file included from...
./NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
#endif /*_NVIC_INTERFACE_H_*/
                             ^
ESP32_Program.c(21): warning: In file included from...
./ESP32_Interface.h(28): warning: no newline at end of file [-Wnewline-eof]
#endif /*_ESP32_INTERFACE_H_*/
                              ^
ESP32_Program.c(22): warning: In file included from...
./ESP32_Private.h(22): warning: no newline at end of file [-Wnewline-eof]
#endif /*_ESP32_PRIVATE_H_*/
                            ^
ESP32_Program.c(23): warning: In file included from...
./ESP32_Config.h(25): warning: no previous extern declaration for non-static variable 'HESP32_AvailableTasks' [-Wmissing-variable-declarations]
uint8 HESP32_AvailableTasks[HESP32_NO_OF_TASKS][20] =   {   
      ^
./ESP32_Config.h(25): note: declare 'static' if the variable is not intended to be used outside of this translation unit
uint8 HESP32_AvailableTasks[HESP32_NO_OF_TASKS][20] =   {   
^
./ESP32_Config.h(30): warning: no newline at end of file [-Wnewline-eof]
#endif /*_ESP32_CONFIG_H_*/
                           ^
ESP32_Program.c(42): warning: passing 'volatile uint8 [20]' to parameter of type 'const char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            if(!(strcmp(glbl_uint8CommandBuffer, HESP32_AvailableTasks[Loc_uint8Index])))
                        ^~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\string.h(125): note: passing argument to parameter here
extern _ARMABI int strcmp(const char * /*s1*/, const char * /*s2*/) __attribute__((__nonnull__(1,2)));
                                             ^
ESP32_Program.c(42): warning: passing 'uint8 [20]' to parameter of type 'const char *' converts between pointers to integer types with different sign [-Wpointer-sign]
            if(!(strcmp(glbl_uint8CommandBuffer, HESP32_AvailableTasks[Loc_uint8Index])))
                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\KEIL_v5\ARM\ARMCLANG\Bin\..\include\string.h(125): note: passing argument to parameter here
extern _ARMABI int strcmp(const char * /*s1*/, const char * /*s2*/) __attribute__((__nonnull__(1,2)));
                                                                  ^
ESP32_Program.c(83): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
        MGPIO_SetPinMode(MUART1_TX_PORT_ID, MUART1_TX_PIN_ID, MGPIO_OUTPUT_AF_PUSH_PULL_2MHZ);
                                                              ^
./GPIO_Interface.h(57): note: expanded from macro 'MGPIO_OUTPUT_AF_PUSH_PULL_2MHZ'
#define MGPIO_OUTPUT_AF_PUSH_PULL_2MHZ              (uint32)0b1010     /* GPIO Output Alternate Function Push-Pull Mode, 2MHz */
                                                            ^
ESP32_Program.c(84): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
        MGPIO_SetPinMode(MUART1_RX_PORT_ID, MUART1_RX_PIN_ID, MGPIO_INPUT_PULL_UP_OR_DOWN_MODE);
                                                              ^
./GPIO_Interface.h(47): note: expanded from macro 'MGPIO_INPUT_PULL_UP_OR_DOWN_MODE'
#define MGPIO_INPUT_PULL_UP_OR_DOWN_MODE            (uint32)0b1000     /* GPIO Input Pull down Mode */
                                                            ^
ESP32_Program.c(178): warning: no newline at end of file [-Wnewline-eof]
}
 ^
14 warnings generated.
compiling ESP32_Program.c...
main.c(2): warning: In file included from...
./Std_Types.h(14): warning: In file included from...
./Platform_Types.h(73): warning: no newline at end of file [-Wnewline-eof]
#endif /*_PLATFORM_TYPES_H_*/
                             ^
main.c(2): warning: In file included from...
./Std_Types.h(31): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STD_TYPES_H_*/
                        ^
main.c(5): warning: In file included from...
./GPIO_Interface.h(108): warning: no newline at end of file [-Wnewline-eof]
#endif /*_GPIO_INTERFACE_H_*/
                             ^
main.c(6): warning: In file included from...
./NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
#endif /*_NVIC_INTERFACE_H_*/
                             ^
main.c(7): warning: In file included from...
./UART_Interface.h(128): warning: no newline at end of file [-Wnewline-eof]
#endif /*_UART_INTERFACE_H_*/
                             ^
main.c(8): warning: In file included from...
./STK_Interface.h(69): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STK_INTERFACE_H_*/
                            ^
main.c(10): warning: In file included from...
./ESP32_Interface.h(28): warning: no newline at end of file [-Wnewline-eof]
#endif /*_ESP32_INTERFACE_H_*/
                              ^
main.c(12): warning: no previous prototype for function 'acknowledged' [-Wmissing-prototypes]
void acknowledged(void)
     ^
main.c(12): note: declare 'static' if the function is not intended to be used outside of this translation unit
void acknowledged(void)
^
static 
main.c(17): warning: no previous prototype for function 'invalid_command' [-Wmissing-prototypes]
void invalid_command(void)
     ^
main.c(17): note: declare 'static' if the function is not intended to be used outside of this translation unit
void invalid_command(void)
^
static 
main.c(27): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN1, MGPIO_OUTPUT_PUSH_PULL_2MHZ);
                                              ^
./GPIO_Interface.h(55): note: expanded from macro 'MGPIO_OUTPUT_PUSH_PULL_2MHZ'
#define MGPIO_OUTPUT_PUSH_PULL_2MHZ                 (uint32)0b0010     /* GPIO Output Push-Pull Mode, 2MHz */
                                                            ^
main.c(30): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    MGPIO_SetPinMode(MGPIO_PORTB, MGPIO_PIN2, MGPIO_OUTPUT_PUSH_PULL_2MHZ);
                                              ^
./GPIO_Interface.h(55): note: expanded from macro 'MGPIO_OUTPUT_PUSH_PULL_2MHZ'
#define MGPIO_OUTPUT_PUSH_PULL_2MHZ                 (uint32)0b0010     /* GPIO Output Push-Pull Mode, 2MHz */
                                                            ^
11 warnings generated.
compiling main.c...
RCC_Program.c(13): warning: In file included from...
./Std_Types.h(14): warning: In file included from...
./Platform_Types.h(73): warning: no newline at end of file [-Wnewline-eof]
#endif /*_PLATFORM_TYPES_H_*/
                             ^
RCC_Program.c(13): warning: In file included from...
./Std_Types.h(31): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STD_TYPES_H_*/
                        ^
RCC_Program.c(15): warning: In file included from...
./RCC_Private.h(129): warning: no newline at end of file [-Wnewline-eof]
#endif /*_RCC_PRIVATE_H_*/
                          ^
RCC_Program.c(16): warning: In file included from...
./RCC_Config.h(86): warning: no newline at end of file [-Wnewline-eof]
#endif /*_RCC_CONFIG_H_*/
                         ^
RCC_Program.c(47): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                CLR_BIT(RCC_CR, RCC_CR_HSEBYP);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
RCC_Program.c(61): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            CLR_BIT(RCC_CFGR, (RCC_CFGR_SW_START + 1));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
RCC_Program.c(123): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    RCC_CFGR &= ~(((uint32)0b1111) << (RCC_CFGR_HPRE_START));
                           ^
RCC_Program.c(124): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    RCC_CFGR |= (((uint32)(MRCC_AHB_PRESCALAR)) << (RCC_CFGR_HPRE_START));
                           ^
./RCC_Config.h(64): note: expanded from macro 'MRCC_AHB_PRESCALAR'
#define MRCC_AHB_PRESCALAR                          MRCC_AHB_CLK_DIV_1
                                                    ^
./RCC_Private.h(106): note: expanded from macro 'MRCC_AHB_CLK_DIV_1'
#define MRCC_AHB_CLK_DIV_1                               0b0000
                                                         ^
RCC_Program.c(126): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    RCC_CFGR &= ~(((uint32)0b111) << (RCC_CFGR_PPRE1_START));
                           ^
RCC_Program.c(127): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    RCC_CFGR |= (((uint32)(MRCC_AHB_PRESCALAR)) << (RCC_CFGR_PPRE1_START));
                           ^
./RCC_Config.h(64): note: expanded from macro 'MRCC_AHB_PRESCALAR'
#define MRCC_AHB_PRESCALAR                          MRCC_AHB_CLK_DIV_1
                                                    ^
./RCC_Private.h(106): note: expanded from macro 'MRCC_AHB_CLK_DIV_1'
#define MRCC_AHB_CLK_DIV_1                               0b0000
                                                         ^
RCC_Program.c(129): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    RCC_CFGR &= ~(((uint32)0b111) << (RCC_CFGR_PPRE2_START));
                           ^
RCC_Program.c(130): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    RCC_CFGR |= (((uint32)(MRCC_AHB_PRESCALAR)) << (RCC_CFGR_PPRE2_START));
                           ^
./RCC_Config.h(64): note: expanded from macro 'MRCC_AHB_PRESCALAR'
#define MRCC_AHB_PRESCALAR                          MRCC_AHB_CLK_DIV_1
                                                    ^
./RCC_Private.h(106): note: expanded from macro 'MRCC_AHB_CLK_DIV_1'
#define MRCC_AHB_CLK_DIV_1                               0b0000
                                                         ^
RCC_Program.c(217): warning: no newline at end of file [-Wnewline-eof]
}
 ^
13 warnings generated.
compiling RCC_Program.c...
RTE/Device/STM32F103C8/system_stm32f10x.c(166): warning: no previous extern declaration for non-static variable 'AHBPrescTable' [-Wmissing-variable-declarations]
__I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
            ^
RTE/Device/STM32F103C8/system_stm32f10x.c(166): note: declare 'static' if the variable is not intended to be used outside of this translation unit
__I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
    ^
1 warning generated.
compiling system_stm32f10x.c...
NVIC_Program.c(12): warning: In file included from...
./Std_Types.h(14): warning: In file included from...
./Platform_Types.h(73): warning: no newline at end of file [-Wnewline-eof]
#endif /*_PLATFORM_TYPES_H_*/
                             ^
NVIC_Program.c(12): warning: In file included from...
./Std_Types.h(31): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STD_TYPES_H_*/
                        ^
NVIC_Program.c(14): warning: In file included from...
./NVIC_Private.h(211): warning: no newline at end of file [-Wnewline-eof]
#endif /*_NVIC_PRIVATE_H_*/
                           ^
NVIC_Program.c(15): warning: In file included from...
./NVIC_Interface.h(151): warning: no newline at end of file [-Wnewline-eof]
#endif /*_NVIC_INTERFACE_H_*/
                             ^
NVIC_Program.c(16): warning: In file included from...
./NVIC_Config.h(16): warning: no newline at end of file [-Wnewline-eof]
#endif /*_NVIC_CONFIG_H_*/
                          ^
NVIC_Program.c(202): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                Loc_uint8PriorityValue = (Copy_uint8GroupPriority << 4);
                                       ~  ~~~~~~~~~~~~~~~~~~~~~~~~^~~~
NVIC_Program.c(210): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                Loc_uint8PriorityValue = ((Copy_uint8SubGroupPriority) | (Copy_uint8GroupPriority << ((Loc_uint16AIRCRPriorityGroupVal - (uint16)MNVIC_PRIORITY_GROUP_4_SUB_0) / 0x100)));
                                       ~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NVIC_Program.c(211): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                NVIC -> IPR[Copy_uint32InterruptNumber] = Loc_uint8PriorityValue << 4;
                                                        ~ ~~~~~~~~~~~~~~~~~~~~~~~^~~~
NVIC_Program.c(216): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                Loc_uint8PriorityValue = (Copy_uint8SubGroupPriority << 4);
                                       ~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
9 warnings generated.
compiling NVIC_Program.c...
assembling startup_stm32f10x_md.s...
STK_Program.c(2): warning: non-portable path to file '"Std_Types.h"'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include "STD_TYPES.h"
         ^~~~~~~~~~~~~
         "Std_Types.h"
STK_Program.c(2): warning: In file included from...
./STD_TYPES.h(14): warning: In file included from...
./Platform_Types.h(73): warning: no newline at end of file [-Wnewline-eof]
#endif /*_PLATFORM_TYPES_H_*/
                             ^
STK_Program.c(2): warning: In file included from...
./STD_TYPES.h(31): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STD_TYPES_H_*/
                        ^
STK_Program.c(4): warning: In file included from...
./STK_Private.h(88): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STK_PRIVATE_H_*/
                          ^
STK_Program.c(5): warning: In file included from...
./STK_Interface.h(69): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STK_INTERFACE_H_*/
                            ^
STK_Program.c(135): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    CLR_BIT((STK -> CTRL), STK_CTRL_ENABLE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
STK_Program.c(149): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    CLR_BIT((STK -> CTRL), STK_CTRL_ENABLE);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
STK_Program.c(170): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        CLR_BIT((STK -> CTRL), STK_CTRL_ENABLE);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
STK_Program.c(185): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        CLR_BIT((STK -> CTRL), STK_CTRL_ENABLE);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
STK_Program.c(222): warning: no previous prototype for function 'SysTick_Handler' [-Wmissing-prototypes]
void SysTick_Handler(void)
     ^
STK_Program.c(222): note: declare 'static' if the function is not intended to be used outside of this translation unit
void SysTick_Handler(void)
^
static 
10 warnings generated.
compiling STK_Program.c...
UART_Program.c(12): warning: In file included from...
./Std_Types.h(14): warning: In file included from...
./Platform_Types.h(73): warning: no newline at end of file [-Wnewline-eof]
#endif /*_PLATFORM_TYPES_H_*/
                             ^
UART_Program.c(12): warning: In file included from...
./Std_Types.h(31): warning: no newline at end of file [-Wnewline-eof]
#endif /*_STD_TYPES_H_*/
                        ^
UART_Program.c(14): warning: In file included from...
./UART_Private.h(299): warning: no newline at end of file [-Wnewline-eof]
#endif /*_UART_PRIVATE_H_*/
                           ^
UART_Program.c(15): warning: In file included from...
./UART_Interface.h(128): warning: no newline at end of file [-Wnewline-eof]
#endif /*_UART_INTERFACE_H_*/
                             ^
UART_Program.c(16): warning: In file included from...
./UART_Config.h(53): warning: no newline at end of file [-Wnewline-eof]
#endif /*_UART_CONFIG_H_*/
                          ^
UART_Program.c(17): warning: In file included from...
./GPIO_Interface.h(108): warning: no newline at end of file [-Wnewline-eof]
#endif /*_GPIO_INTERFACE_H_*/
                             ^
UART_Program.c(35): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        CLR_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_M_BIT);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(43): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        CLR_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_PCE_BIT);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(54): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    ((UART[Copy_UARTChoice]) -> CR2) &= ~(((uint32) 0b11) << MUART_CR2_STOP_START_BIT);
                                                    ^
UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
          ^
./UART_Config.h(34): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
#define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
                                        ^
./UART_Private.h(282): note: expanded from macro 'MUART_ONE_STOP_BIT'
#define MUART_ONE_STOP_BIT                          0b00
                                                    ^
UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
                                   ^
./UART_Private.h(283): note: expanded from macro 'MUART_HALF_STOP_BIT'
#define MUART_HALF_STOP_BIT                         0b01
                                                    ^
UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
                                                            ^
./UART_Config.h(34): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
#define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
                                        ^
./UART_Private.h(282): note: expanded from macro 'MUART_ONE_STOP_BIT'
#define MUART_ONE_STOP_BIT                          0b00
                                                    ^
UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
                                                                                     ^
./UART_Private.h(282): note: expanded from macro 'MUART_ONE_STOP_BIT'
#define MUART_ONE_STOP_BIT                          0b00
                                                    ^
UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
                                                                                                             ^
./UART_Config.h(34): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
#define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
                                        ^
./UART_Private.h(282): note: expanded from macro 'MUART_ONE_STOP_BIT'
#define MUART_ONE_STOP_BIT                          0b00
                                                    ^
UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
                                                                                                                                      ^
./UART_Private.h(285): note: expanded from macro 'MUART_ONE_HALF_STOP_BIT'
#define MUART_ONE_HALF_STOP_BIT                     0b11
                                                    ^
UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
                                                                                                                                                                   ^
./UART_Config.h(34): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
#define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
                                        ^
./UART_Private.h(282): note: expanded from macro 'MUART_ONE_STOP_BIT'
#define MUART_ONE_STOP_BIT                          0b00
                                                    ^
UART_Program.c(56): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
    #if ((MUART_NO_OF_STOP_BITS == MUART_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_ONE_HALF_STOP_BIT) || (MUART_NO_OF_STOP_BITS == MUART_TWO_STOP_BIT))
                                                                                                                                                                                            ^
./UART_Private.h(284): note: expanded from macro 'MUART_TWO_STOP_BIT'
#define MUART_TWO_STOP_BIT                          0b10
                                                    ^
UART_Program.c(57): warning: binary integer literals are a GNU extension [-Wgnu-binary-literal]
        ((UART[Copy_UARTChoice]) -> CR2) |= (((uint32) MUART_NO_OF_STOP_BITS) << MUART_CR2_STOP_START_BIT);
                                                       ^
./UART_Config.h(34): note: expanded from macro 'MUART_NO_OF_STOP_BITS'
#define MUART_NO_OF_STOP_BITS           MUART_ONE_STOP_BIT
                                        ^
./UART_Private.h(282): note: expanded from macro 'MUART_ONE_STOP_BIT'
#define MUART_ONE_STOP_BIT                          0b00
                                                    ^
UART_Program.c(65): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        CLR_BIT(((UART[Copy_UARTChoice]) -> CR1), MUART_CR1_TCIE_BIT);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(89): warning: implicit conversion changes signedness: 'int' to 'uint32' (aka 'unsigned long') [-Wsign-conversion]
    ((UART[Copy_UARTChoice]) -> BRR) = (Loc_uint16Fraction << MUART_BRR_FRACTION_START_BIT) | (Loc_uint16Mantissa << MUART_BRR_MANTISSA_START_BIT);
                                     ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
UART_Program.c(124): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_TC_BIT);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(112): warning: while loop has empty body [-Wempty-body]
    while(!(GET_BIT(((UART[Copy_UARTChoice]) -> SR), MUART_SR_TXE_BIT)));
                                                                        ^
UART_Program.c(112): note: put the semicolon on a separate line to silence this warning
UART_Program.c(143): warning: while loop has empty body [-Wempty-body]
    while(!(GET_BIT(((UART[Copy_UARTChoice]) -> SR), MUART_SR_TXE_BIT)));
                                                                        ^
UART_Program.c(143): note: put the semicolon on a separate line to silence this warning
UART_Program.c(172): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_RXNE_BIT);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(235): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
      CLR_BIT(((UART[Copy_UARTChoice]) -> SR) , MUART_SR_RXNE_BIT);  
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(348): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    CLR_BIT(((UART[0]) -> SR) , MUART_SR_TC_BIT);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(349): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    CLR_BIT(((UART[0]) -> SR) , MUART_SR_RXNE_BIT);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(320): warning: no previous prototype for function 'USART1_IRQHandler' [-Wmissing-prototypes]
void USART1_IRQHandler(void)
     ^
UART_Program.c(320): note: declare 'static' if the function is not intended to be used outside of this translation unit
void USART1_IRQHandler(void)
^
static 
UART_Program.c(379): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    CLR_BIT(((UART[1]) -> SR) , MUART_SR_TC_BIT);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(380): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    CLR_BIT(((UART[1]) -> SR) , MUART_SR_RXNE_BIT);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(351): warning: no previous prototype for function 'USART2_IRQHandler' [-Wmissing-prototypes]
void USART2_IRQHandler(void)
     ^
UART_Program.c(351): note: declare 'static' if the function is not intended to be used outside of this translation unit
void USART2_IRQHandler(void)
^
static 
UART_Program.c(410): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    CLR_BIT(((UART[2]) -> SR) , MUART_SR_TC_BIT);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(411): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    CLR_BIT(((UART[2]) -> SR) , MUART_SR_RXNE_BIT);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./BIT_MATH.h(15): note: expanded from macro 'CLR_BIT'
#define CLR_BIT(REG,BIT)                        (REG &= ~(1 << BIT))
                                                     ~~ ^~~~~~~~~~~
UART_Program.c(412): warning: no newline at end of file [-Wnewline-eof]
}
 ^
UART_Program.c(382): warning: no previous prototype for function 'USART3_IRQHandler' [-Wmissing-prototypes]
void USART3_IRQHandler(void)
     ^
UART_Program.c(382): note: declare 'static' if the function is not intended to be used outside of this translation unit
void USART3_IRQHandler(void)
^
static 
35 warnings generated.
compiling UART_Program.c...
linking...
Program Size: Code=2380 RO-data=280 RW-data=44 ZI-data=1696  
FromELF: creating hex file...
".\Objects\ESP32_TEST.axf" - 0 Error(s), 117 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.9.0.pack
                ARM.CMSIS.5.9.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.6.0

Package Vendor: Keil
                https://www.keil.com/pack/Keil.STM32F1xx_DFP.2.4.1.pack
                Keil.STM32F1xx_DFP.2.4.1
                STMicroelectronics STM32F1 Series Device Support, Drivers and Examples
   * Component: Startup Version: 1.0.0

<h2>Collection of Component include folders:</h2>
  .\RTE\Device\STM32F103C8
  .\RTE\_Target_1
  C:\Users\Ahmed\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include
  C:\Users\Ahmed\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.6.0

   * Component: Keil::Device:Startup:1.0.0
      Include file:  RTE_Driver\Config\RTE_Device.h
      Source file:   Device\Source\system_stm32f10x.c
      Source file:   Device\Source\ARM\startup_stm32f10x_md.s
      Source file:   Device\Source\ARM\STM32F1xx_OPT.s
Build Time Elapsed:  00:00:01
</pre>
</body>
</html>
